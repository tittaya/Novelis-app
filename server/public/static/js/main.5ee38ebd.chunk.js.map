{"version":3,"sources":["reportWebVitals.js","context.js","components/MainProjectHeader.js","client.js","graphql/queries.js","graphql/mutations.js","components/ConfirmDialog.js","views/Main-Project/ProjectList.js","views/Main-Project/ButtonNewProject.js","views/Main-Project/Main-Project.js","views/Main-Project/AddProject.js","views/Main-Project/CreateProject.js","components/BottomNav.js","components/SearchAutocomplete.js","components/Header.js","views/MyProject/CharBox.js","views/MyProject/MapBox.js","views/MyProject/TLBox.js","views/MyProject/WBox.js","views/MyProject/ProjectDetails.js","views/MyProject/MyProject.js","views/MyCharacter/CBox.js","views/MyCharacter/CharacterList.js","views/MyCharacter/MyCharacter.js","views/MyCharacter/AddCharacter.js","views/MyCharacter/EditCharacter.js","views/MyCharacter/GetCharacterDetails.js","views/MyCharacter/CharacterDetails.js","views/MyMap/CBox.js","views/MyMap/MapList.js","views/MyMap/MyMap.js","views/MyStory/CBox.js","views/MyStory/ChapterList.js","views/MyStory/MyStory.js","views/MyTimeline/CBox.js","views/MyTimeline/TimelineList.js","views/MyTimeline/MyTimeline.js","views/Login-page/Login.js","views/Login-page/Login-page.js","views/MyTimeline/NewTimeline.js","views/MyTimeline/EditTimeline.js","views/MyMap/EditMap.js","views/MyStory/QuilEditor.js","views/MyStory/WriteArea.js","views/MyStory/EditStory.js","views/MyStory/GetChapterDetail.js","views/MyStory/ChapterDetail.js","views/MyTimeline/TimelineA.js","views/MyTimeline/TimelineDetails.js","views/Main-Project/VersionMenu.js","reducer.js","ProtectedRoute.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Context","createContext","currentUser","isAuth","userProjects","currentProject","MainProjectHeader","useContext","state","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","dispatch","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","buttonText","onLogoutSuccess","type","console","log","mobileMenuId","renderMobileMenu","Tooltip","title","IconButton","sx","p","Avatar","alt","src","picture","Box","flexGrow","AppBar","position","style","background","Toolbar","size","edge","color","mr","component","Link","to","Typography","variant","noWrap","display","xs","sm","md","require","config","BASE_URL","useClient","idToken","setIdToken","useEffect","token","window","gapi","auth2","getAuthInstance","get","getAuthResponse","id_token","GraphQLClient","headers","authorization","ME_QUERY","gql","GET_USER_PROJECTS","SELECTED_PROJECT","CREATE_PROJECT_MUTATION","UPDATE_PROJECT_MUTATION","UPDATE_PROJECT_IMAGE_MUTATION","DELETE_PROJECT_MUTATION","CREATE_CHARACTER_MUTATION","UPDATE_CHARACTER_MUTATION","UPDATE_CHARACTER_IMAGE_MUTATION","DELETE_CHARACTER_MUTATION","CREATE_NEW_TIMELINE_MUTATION","CREATE_TIMELINE_BOX_MUTATION","UPDATE_TIMELINE_MUTATION","DELETE_TIMELINE_MUTATION","SAVE_VERSION_MUTATION","SET_VERSION_MUTATION","CREATE_CHAPTER_MUTATION","DELETE_CHAPTER_MUTATION","CREATE_MAP_MUTATION","ConfirmDialog","props","confirmDialog","setConfirmDialog","Dialog","isOpen","DialogTitle","DialogContent","subTitle","Button","onConfirm","ProjectList","openOkSave","setOpenOkSave","handleClose","navigate","useNavigate","client","setUserProjects","getUserProjects","a","_id","variables","creator","version","request","Projects","payload","saveVersion","projectId","projects","allVersions","filter","e","old_id","length","saveVersionVar","number","saveVersionAdded","deleteProject","projectDelete","toMyProject","localStorage","setItem","toVersionMenu","bgcolor","pt","pb","Container","maxWidth","align","paragraph","Grid","container","spacing","map","project","date","last_edited","dd","slice","mm_lowercase","toLowerCase","mm_number","indexOf","last_edit_date","item","DialogActions","Card","height","flexDirection","CardActionArea","CardMedia","image","CardContent","gutterBottom","justifyContent","ButtonNewProject","Fab","backgroundColor","alignSelf","bottom","right","ApolloClient","uri","process","SERVER_URI","theme","createMuiTheme","palette","primary","main","secondary","MyProject","ApolloProvider","ThemeProvider","alignItems","minHeight","createTheme","AddProject","setTitle","setImage","author","setAuthor","summary","setSummary","submitting","setSubmitting","handleImageUpload","data","FormData","append","axios","post","CLOUDINARY_URL","res","url","handleSubmit","preventDefault","createProject","m","width","noValidate","autoComplete","mb","Paper","my","accept","onChange","target","files","TextField","required","name","label","fullWidth","value","FormControlLabel","control","Checkbox","endIcon","disabled","trim","CreateProject","BottomNav","pathname","location","setValue","CssBaseline","left","elevation","BottomNavigation","newValue","showLabels","BottomNavigationAction","icon","SearchAutocomplete","toggleOpen","setDialogValue","year","dialogValue","Autocomplete","New","options","top100Films","getOptionLabel","option","inputValue","selectOnFocus","clearOnBlur","handleHomeEndKeys","renderOption","freeSolo","renderInput","params","InputProps","startAdornment","onSubmit","parseInt","Stack","DialogContentText","Header","TabPanel","children","index","other","role","hidden","fabStyle","CharBox","CharactersCount","useTheme","fabs","Tabs","indicatorColor","textColor","tabInlineLabel","Tab","verticalAlign","dir","direction","fab","Zoom","in","unmountOnExit","MapBox","MapsCount","TLBox","TimelineCount","WBox","ChaptersCount","mdTheme","ProjectDetails","charactersCount","setCharactersCount","timelinesCount","setTimelinesCount","chaptersCount","setChaptersCount","mapsCount","setMapsCount","getProjectDetails","getItem","selectedProject","characters","timelines","maps","chapters","updateProject","updatedProject","updateProjectImage","mode","grey","overflow","mt","gap","multiline","rows","maxRows","lg","useLocation","thisProjectId","setThisProjectId","selectedProjectId","CBox","CharacterName","characterId","DisplayName","Image","dob","uniqueness1","uniqueness2","converted_dob","setConvert_dob","toCharacterDetails","dob_yyyy","dob_mm","dob_dd","convertLastEdit","flex","floatingMenuButtonStyle","CharacterList","setCharacters","getCharacters","character","display_name","DOB","uniqueness","mx","MyCharacter","AddCharacter","setName","setDisplay_name","isoString","Date","toISOString","setDOB","biography","setBiography","setUniqueness","uniquenessInput","setUniquenessInput","createCharacter","InputLabelProps","shrink","dateInput","i","count","items","addUniqnessInput","cloudinary","GetCharacterDetails","setCount","findCharacter","projectVariable","find","updateCharacter","updateCharacterImage","deleteCharacter","onLoad","getUniquenessInput","CharacterDetails","FloatingActionButtonZoom","MappingName","LastEdited","MapList","setMaps","getMaps","MyMap","ChapterName","ChapterId","toChapterDetail","chapterId","ChapterList","setChapters","getChapters","chapter","MyStory","TimelineName","TimelineId","toTimelineDetails","timelineId","TimelineList","setTimelines","getTimelines","timeline","MyTimeline","Login","googleSuccess","googleUser","me","isSignedIn","googleFailure","error","backgroundImage","backgroundRepeat","t","backgroundSize","backgroundPosition","square","email","password","clientId","GOOGLE_CLIENT_ID","onSuccess","onFailure","cookiePolicy","LoginPage","NewTimeline","setOpen","setItems","timelineName","setTimelineName","createBoxArray","box","forEach","boxItem","push","addTimeline","createbox","onDragEnd","result","destination","reorderedItems","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","padding","idx","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","grid","margin","autoFocus","placeholder","defaultValue","polyfill","addEventListener","EditTimeline","EditMap","charName","setCharName","inputListSq","setInputListSq","inputListChar","setInputListChar","inputListRel","setInputListRel","inputListRelB","setInputListRelB","inputListTf","setInputListTf","openColorPick","setOpenColorPick","openInputText","setOpenInputText","openCrateChar","setOpenCrateChar","openCrateEmo","setOpenCrateEmo","colorGG","setColorGG","colorTB","setColorTB","DraggableCard","text","bgColor","DraggableCardPerson","DraggableCardSquare","DraggableCardEgood","DraggableCardEbad","DraggableCardTest","mapName","setMapName","mapCharcters","setMapCharcters","createMap","mapCreated","FormControl","InputLabel","Select","labelId","hex","concat","startIcon","__ISMSIE__","navigator","userAgent","match","Clipboard","getMetaTagElements","stringContent","el","document","createElement","innerHTML","getElementsByTagName","clipboardData","getData","pastedData","urlMatches","link","node","getAttribute","rendered","range","quill","getSelection","pasteHTML","setSelection","catch","Quill","import","register","BlockEmbed","ImageBlot","imgTag","setAttribute","blotName","tagName","VideoBlot","videoTag","iframeTag","FileBlot","prefixTag","innerText","bTag","linkTag","appendChild","querySelector","className","PollBlot","QuillEditor","handleChange","html","setState","editorHtml","onEditorChange","imageHandler","inputOpenImageRef","current","click","videoHandler","inputOpenVideoRef","fileHandler","inputOpenFileRef","insertImage","stopPropagation","file","formData","header","response","success","alert","reactQuillRef","getEditor","focus","insertEmbed","fileName","_isMounted","onFilesChange","insertVideo","insertFile","modules","toolbar","handlers","insertPoll","pollHandler","formats","createRef","this","persist","Component","WriteArea","chapterName","setChapterName","chapterOrder","setChapterOrder","content","setContent","createChapter","orderInt","order","chapterCreated","href","QuilEditor","EditStory","GetChapterDetail","setOrder","getChapterDetail","deleteChapter","dangerouslySetInnerHTML","__html","ChapterDetail","Timeline","boxes","setBoxes","boxName","setBoxName","boxDate","setBoxDate","boxEvent","setBoxEvent","boxCharacter","setBoxCharacter","findTimeline","addTimelineฺBox","updateTimeline","updateVariables","deleteTimeline","TimelineDetails","mtheme","VersionMenu","Client","currentVersions","setCurrentVersions","getProjectVersions","projectVersions","setProjectVersion","Id","newId","Divider","List","maxHeight","subheader","mm_name","time","ListItemButton","reducer","newProject","prevProjects","Object","values","ProtectedRoute","Root","initialState","useReducer","Provider","path","element","EditCharacter","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5ee38ebd.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createContext } from 'react'\r\n\r\nconst Context = createContext({\r\n    currentUser: null,\r\n    isAuth: false,\r\n    userProjects: null,\r\n    currentProject: null\r\n})\r\n\r\nexport default Context;","import React, {useContext} from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport Context from '../context';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function MainProjectHeader() {\r\n  const {state} = useContext(Context);\r\n  const {currentUser} = state;\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  \r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const {dispatch} = useContext(Context)\r\n\r\n  const onLogout = () => {\r\n    dispatch({type: \"LOGOUT_USER\"});\r\n    console.log(\"Logged out\");\r\n  }\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem>\r\n        <GoogleLogout\r\n          buttonText='Logout'\r\n          onLogoutSuccess={onLogout}\r\n        />\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      \r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n      <Tooltip title=\"Open settings\">\r\n        <IconButton sx={{ p: 0 }}>\r\n          {currentUser && (<Avatar alt=\"Remy Sharp\" src={currentUser.picture} />)}\r\n        </IconButton>\r\n        </Tooltip>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\" style={{ background: '#967969' }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{ mr: 2 }}\r\n            component={Link}\r\n            to=\"/main-project\"\r\n\r\n          >\r\n            <HomeIcon />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: 'none', sm: 'block' } }}\r\n          >\r\n            Novelis\r\n          </Typography>\r\n         \r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n            \r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n               {/* <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" /> */}\r\n               {currentUser && (<Avatar alt=\"Remy Sharp\" src={currentUser.picture} />)}\r\n               \r\n            </IconButton>\r\n          </Box>\r\n          <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}","import {useState, useEffect} from 'react';\r\nimport {GraphQLClient} from 'graphql-request';\r\nrequire(\"dotenv\").config();\r\n\r\nexport const BASE_URL = \r\n    process.env.NODE_ENV === \"production\" ? \r\n    \"<insert-production-url\":\"http://localhost:4000/graphql\"\r\n\r\nexport const useClient = () => {\r\n    const [idToken, setIdToken] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        const token = window.gapi.auth2\r\n        .getAuthInstance()\r\n        .currentUser.get()\r\n        .getAuthResponse().id_token;\r\n        setIdToken(token);\r\n    }, [])\r\n\r\n    return new GraphQLClient(BASE_URL,{\r\n        headers: {authorization: idToken}\r\n    })\r\n}","import {gql} from 'graphql-tag';\r\n\r\nconst ME_QUERY = gql`\r\n  {\r\n    me {\r\n      _id\r\n      name\r\n      email\r\n      picture\r\n    }\r\n  }\r\n`\r\n\r\nconst GET_PROJECTS_QUERY = gql`\r\n  {\r\n      getProjects {\r\n          _id\r\n          title\r\n          author\r\n          summary\r\n          creator {\r\n              _id\r\n              name\r\n              email\r\n              picture\r\n          }\r\n      }\r\n  }\r\n`\r\n\r\nconst GET_USER_PROJECTS = gql`\r\n  query($creator: ID!, $version: Boolean){\r\n      Projects(creator: $creator, version: $version){\r\n        _id\r\n        title\r\n        image\r\n        author\r\n        created_date\r\n        last_edited\r\n        old_id\r\n        version\r\n        summary\r\n        creator {\r\n            _id\r\n            name\r\n            email\r\n            picture\r\n        }\r\n        chapters {\r\n            _id\r\n            name\r\n            order\r\n            characters\r\n            last_edited\r\n            content\r\n        }\r\n        characters {\r\n            _id\r\n            name\r\n            last_edited\r\n            display_name\r\n            DOB \r\n            biography\r\n            uniqueness\r\n        }\r\n        timelines {\r\n            _id\r\n            name\r\n            characters\r\n            last_edited\r\n            box {\r\n                _id\r\n                id\r\n                name\r\n                date\r\n                event\r\n                character\r\n                last_edited\r\n            }\r\n        }\r\n        maps {\r\n            _id\r\n            name\r\n            characters\r\n            last_edited\r\n            content\r\n        }\r\n      }\r\n  }\r\n`\r\nconst SELECTED_PROJECT = gql`\r\n  query($_id: ID!){\r\n      selectedProject(_id: $_id){\r\n        _id\r\n        title\r\n        image\r\n        author\r\n        created_date\r\n        last_edited\r\n        old_id\r\n        version\r\n        summary\r\n        creator {\r\n            _id\r\n            name\r\n            email\r\n            picture\r\n        }\r\n        chapters {\r\n            _id\r\n            name\r\n            order\r\n            characters\r\n            last_edited\r\n            content\r\n        }\r\n        characters {\r\n            _id\r\n            name\r\n            image\r\n            last_edited\r\n            display_name\r\n            DOB \r\n            biography\r\n            uniqueness\r\n        }\r\n        timelines {\r\n            _id\r\n            name\r\n            characters\r\n            last_edited\r\n            box {\r\n                _id\r\n                id\r\n                name\r\n                date\r\n                event\r\n                character\r\n                last_edited\r\n            }\r\n        }\r\n        maps {\r\n            _id\r\n            name\r\n            characters\r\n            last_edited\r\n            content\r\n        }\r\n      }\r\n  }\r\n`\r\n\r\n\r\nconst SELECTED_CHARACTER = gql`\r\n    query($_id: ID!, $characterId: ID!){\r\n        selectedProject(_id: $_id){\r\n            _id\r\n            title\r\n            image\r\n            author\r\n            created_date\r\n            last_edited\r\n            version\r\n            old_id\r\n            summary\r\n            creator {\r\n                _id\r\n                name\r\n                email\r\n                picture\r\n            }\r\n            chapters {\r\n                _id\r\n                name\r\n                order\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n            characters (filter: { _id: $characterId }) {\r\n                _id\r\n                name\r\n                last_edited\r\n                display_name\r\n                DOB \r\n                biography\r\n                uniqueness\r\n            }\r\n            timelines {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                box {\r\n                    _id\r\n                    id\r\n                    name\r\n                    date\r\n                    event\r\n                    character\r\n                    last_edited\r\n                }\r\n            }\r\n            maps {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport {\r\n    \r\n    ME_QUERY,\r\n    GET_PROJECTS_QUERY,\r\n    GET_USER_PROJECTS,\r\n    SELECTED_PROJECT,\r\n    SELECTED_CHARACTER\r\n    // addUserMutation,\r\n    // getUsersQuery, \r\n    // getUserQuery,\r\n\r\n    // addProjectMutation,\r\n    // getProjectsQuery,\r\n    // getProjectQuery,\r\n    \r\n    \r\n    \r\n}","import {gql} from 'graphql-tag';\r\n\r\nconst CREATE_PROJECT_MUTATION = gql`\r\n    mutation($title: String!, $image: String, $author: String!, $summary: String){\r\n        createProject(input: { title: $title, image: $image, author: $author, summary: $summary }) {\r\n            _id\r\n            title\r\n            image\r\n            author\r\n            last_edited\r\n            version\r\n            old_id\r\n            summary\r\n            creator { \r\n                _id\r\n                name\r\n                email\r\n                picture\r\n            }\r\n            chapters {\r\n                _id\r\n                name\r\n                order\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n            characters {\r\n                _id\r\n                name\r\n                last_edited\r\n                display_name\r\n                DOB \r\n                biography\r\n                uniqueness\r\n            }\r\n            timelines {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                box {\r\n                    _id\r\n                    id\r\n                    name\r\n                    date\r\n                    event\r\n                    character\r\n                    last_edited\r\n                }\r\n            }\r\n            maps {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst UPDATE_PROJECT_MUTATION = gql`\r\n    mutation($projectId: ID, $title: String, $author: String, $summary: String){\r\n        updateProject(projectId: $projectId, title: $title, author: $author,summary: $summary){\r\n            _id\r\n            title\r\n            image\r\n            author\r\n            last_edited\r\n            version\r\n            old_id\r\n            summary\r\n            creator { \r\n                _id\r\n                name\r\n                email\r\n                picture\r\n            }\r\n            chapters {\r\n                _id\r\n                name\r\n                order\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n            characters {\r\n                _id\r\n                name\r\n                last_edited\r\n                display_name\r\n                DOB \r\n                biography\r\n                uniqueness\r\n            }\r\n            timelines {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                box {\r\n                    _id\r\n                    id\r\n                    name\r\n                    date\r\n                    event\r\n                    character\r\n                    last_edited\r\n                }\r\n            }\r\n            maps {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\nconst UPDATE_PROJECT_IMAGE_MUTATION = gql`\r\n    mutation($projectId: ID, $image: String){\r\n        updateProjectImage(projectId: $projectId, image: $image){\r\n            _id\r\n            title\r\n            image\r\n            author\r\n            last_edited\r\n            version\r\n            old_id\r\n            summary\r\n            creator { \r\n                _id\r\n                name\r\n                email\r\n                picture\r\n            }\r\n            chapters {\r\n                _id\r\n                name\r\n                order\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n            characters {\r\n                _id\r\n                name\r\n                last_edited\r\n                display_name\r\n                DOB \r\n                biography\r\n                uniqueness\r\n            }\r\n            timelines {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                box {\r\n                    _id\r\n                    id\r\n                    name\r\n                    date\r\n                    event\r\n                    character\r\n                    last_edited\r\n                }\r\n            }\r\n            maps {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst DELETE_PROJECT_MUTATION = gql`\r\n    mutation($projectId: ID, $creator: ID){\r\n        deleteProject(projectId: $projectId, creator: $creator) {\r\n            _id\r\n            title\r\n            image\r\n            author\r\n            last_edited\r\n            version\r\n            old_id\r\n            summary\r\n            creator { \r\n                _id\r\n                name\r\n                email\r\n                picture\r\n            }\r\n            chapters {\r\n                _id\r\n                name\r\n                order\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n            characters {\r\n                _id\r\n                name\r\n                last_edited\r\n                display_name\r\n                DOB \r\n                biography\r\n                uniqueness\r\n            }\r\n            timelines {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                box {\r\n                    _id\r\n                    id\r\n                    name\r\n                    date\r\n                    event\r\n                    character\r\n                    last_edited\r\n                }\r\n            }\r\n            maps {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst CREATE_CHARACTER_MUTATION = gql`\r\n  mutation($projectId: ID, $name: String!, $display_name: String, $image: String, $dob: String, $biography: String, $uniqueness: [String]){\r\n    createCharacter(projectId: $projectId, name: $name, image: $image, display_name: $display_name, dob: $dob, biography: $biography, uniqueness: $uniqueness){\r\n        _id\r\n        title\r\n        image\r\n        author\r\n        last_edited\r\n        version\r\n        old_id\r\n        summary\r\n        creator { \r\n            _id\r\n            name\r\n            email\r\n            picture\r\n        }\r\n        chapters {\r\n            _id\r\n            name\r\n            order\r\n            characters\r\n            last_edited\r\n            content\r\n        }\r\n        characters {\r\n            _id\r\n            name\r\n            image\r\n            last_edited\r\n            display_name\r\n            DOB \r\n            biography\r\n            uniqueness\r\n        }\r\n        timelines {\r\n            _id\r\n            name\r\n            characters\r\n            last_edited\r\n            box {\r\n                _id\r\n                id\r\n                name\r\n                date\r\n                event\r\n                character\r\n                last_edited\r\n            }\r\n        }\r\n        maps {\r\n            _id\r\n            name\r\n            characters\r\n            last_edited\r\n            content\r\n        }\r\n    }\r\n  }\r\n`\r\nconst UPDATE_CHARACTER_MUTATION = gql`\r\nmutation($projectId: ID, $characterId: ID, $name: String!, $display_name: String, $dob: String, $biography: String){\r\n    updateCharacter(projectId: $projectId, characterId: $characterId, name: $name display_name: $display_name, dob: $dob, biography: $biography){\r\n        _id\r\n        title\r\n        image\r\n        author\r\n        last_edited\r\n        version\r\n        old_id\r\n        summary\r\n        creator { \r\n            _id\r\n            name\r\n            email\r\n            picture\r\n        }\r\n        chapters {\r\n            _id\r\n            name\r\n            order\r\n            characters\r\n            last_edited\r\n            content\r\n        }\r\n        characters {\r\n            _id\r\n            name\r\n            image\r\n            last_edited\r\n            display_name\r\n            DOB \r\n            biography\r\n            uniqueness\r\n        }\r\n        timelines {\r\n            _id\r\n            name\r\n            characters\r\n            last_edited\r\n            box {\r\n                _id\r\n                id\r\n                name\r\n                date\r\n                event\r\n                character\r\n                last_edited\r\n            }\r\n        }\r\n        maps {\r\n            _id\r\n            name\r\n            characters\r\n            last_edited\r\n            content\r\n        }\r\n    }\r\n  }\r\n`\r\n\r\nconst UPDATE_CHARACTER_IMAGE_MUTATION = gql`\r\n    mutation($projectId: ID, $characterId: ID, $image: String){\r\n        updateCharacterImage(projectId: $projectId, characterId: $characterId, image: $image){\r\n            _id\r\n            title\r\n            image\r\n            author\r\n            last_edited\r\n            version\r\n            old_id\r\n            summary\r\n            creator { \r\n                _id\r\n                name\r\n                email\r\n                picture\r\n            }\r\n            chapters {\r\n                _id\r\n                name\r\n                order\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n            characters {\r\n                _id\r\n                name\r\n                last_edited\r\n                display_name\r\n                DOB \r\n                biography\r\n                uniqueness\r\n            }\r\n            timelines {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                box {\r\n                    _id\r\n                    id\r\n                    name\r\n                    date\r\n                    event\r\n                    character\r\n                    last_edited\r\n                }\r\n            }\r\n            maps {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst DELETE_CHARACTER_MUTATION = gql`\r\n    mutation($projectId: ID, $characterId: ID){\r\n        deleteCharacter(projectId: $projectId, characterId: $characterId) {\r\n            _id\r\n            title\r\n            image\r\n            author\r\n            last_edited\r\n            version\r\n            old_id\r\n            summary\r\n            creator { \r\n                _id\r\n                name\r\n                email\r\n                picture\r\n            }\r\n            chapters {\r\n                _id\r\n                name\r\n                order\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n            characters {\r\n                _id\r\n                name\r\n                last_edited\r\n                display_name\r\n                DOB \r\n                biography\r\n                uniqueness\r\n            }\r\n            timelines {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                box {\r\n                    _id\r\n                    id\r\n                    name\r\n                    date\r\n                    event\r\n                    character\r\n                    last_edited\r\n                }\r\n            }\r\n            maps {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst CREATE_NEW_TIMELINE_MUTATION = gql`\r\n    mutation($projectId: ID, $name: String, $characters: String, $box: [BoxInput]){\r\n        createNewTimeline(projectId: $projectId, name: $name, characters: $characters, box: $box){\r\n            _id\r\n            title\r\n            image\r\n            author\r\n            last_edited\r\n            version\r\n            old_id\r\n            summary\r\n            creator { \r\n                _id\r\n                name\r\n                email\r\n                picture\r\n            }\r\n            chapters {\r\n                _id\r\n                name\r\n                order\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n            characters {\r\n                _id\r\n                name\r\n                last_edited\r\n                display_name\r\n                DOB \r\n                biography\r\n                uniqueness\r\n            }\r\n            timelines {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                box {\r\n                    _id\r\n                    id\r\n                    name\r\n                    date\r\n                    event\r\n                    character\r\n                    last_edited\r\n                }\r\n            }\r\n            maps {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst CREATE_TIMELINE_BOX_MUTATION = gql`\r\n    mutation($projectId: ID, $timelineId: ID, $id: String, $name: String, $date: String, $event: String, $character: String){\r\n        createTimelineBox(projectId: $projectId, timelineId: $timelineId, id: $id, name: $name, date: $date, event: $event, character: $character){\r\n            _id\r\n            title\r\n            image\r\n            author\r\n            last_edited\r\n            version\r\n            old_id\r\n            summary\r\n            creator { \r\n                _id\r\n                name\r\n                email\r\n                picture\r\n            }\r\n            chapters {\r\n                _id\r\n                name\r\n                order\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n            characters {\r\n                _id\r\n                name\r\n                last_edited\r\n                display_name\r\n                DOB \r\n                biography\r\n                uniqueness\r\n            }\r\n            timelines {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                box {\r\n                    _id\r\n                    id\r\n                    name\r\n                    date\r\n                    event\r\n                    character\r\n                    last_edited\r\n                }\r\n            }\r\n            maps {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst UPDATE_TIMELINE_MUTATION = gql`\r\n    mutation($projectId: ID, $timelineId: ID, $name: String, $characters: String, $box: [BoxInput]){\r\n        updateTimeline(projectId: $projectId, timelineId: $timelineId, name: $name, characters: $characters, box: $box){\r\n            _id\r\n            title\r\n            image\r\n            author\r\n            last_edited\r\n            version\r\n            old_id\r\n            summary\r\n            creator { \r\n                _id\r\n                name\r\n                email\r\n                picture\r\n            }\r\n            chapters {\r\n                _id\r\n                name\r\n                order\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n            characters {\r\n                _id\r\n                name\r\n                last_edited\r\n                display_name\r\n                DOB \r\n                biography\r\n                uniqueness\r\n            }\r\n            timelines {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                box {\r\n                    _id\r\n                    id\r\n                    name\r\n                    date\r\n                    event\r\n                    character\r\n                    last_edited\r\n                }\r\n            }\r\n            maps {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\nconst DELETE_TIMELINE_MUTATION = gql`\r\n    mutation($projectId: ID, $timelineId: ID){\r\n        deleteTimeline(projectId: $projectId, timelineId: $timelineId) {\r\n            _id\r\n            title\r\n            image\r\n            author\r\n            last_edited\r\n            version\r\n            old_id\r\n            summary\r\n            creator { \r\n                _id\r\n                name\r\n                email\r\n                picture\r\n            }\r\n            chapters {\r\n                _id\r\n                name\r\n                order\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n            characters {\r\n                _id\r\n                name\r\n                last_edited\r\n                display_name\r\n                DOB \r\n                biography\r\n                uniqueness\r\n            }\r\n            timelines {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                box {\r\n                    _id\r\n                    id\r\n                    name\r\n                    date\r\n                    event\r\n                    character\r\n                    last_edited\r\n                }\r\n            }\r\n            maps {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst SAVE_VERSION_MUTATION = gql`\r\n    mutation($projectId: ID, $number: Int){\r\n        saveVersion(projectId: $projectId, number: $number){\r\n            _id\r\n            title\r\n            image\r\n            author\r\n            last_edited\r\n            version\r\n            old_id\r\n            summary\r\n            creator { \r\n                _id\r\n                name\r\n                email\r\n                picture\r\n            }\r\n            chapters {\r\n                _id\r\n                name\r\n                order\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n            characters {\r\n                _id\r\n                name\r\n                last_edited\r\n                display_name\r\n                DOB \r\n                biography\r\n                uniqueness\r\n            }\r\n            timelines {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                box {\r\n                    _id\r\n                    id\r\n                    name\r\n                    date\r\n                    event\r\n                    character\r\n                    last_edited\r\n                }\r\n            }\r\n            maps {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst SET_VERSION_MUTATION = gql`\r\n    mutation($projectId: ID, $newId: ID){\r\n        setVersion(projectId: $projectId, newId: $newId){\r\n            _id\r\n            title\r\n            image\r\n            author\r\n            last_edited\r\n            version\r\n            old_id\r\n            summary\r\n            creator { \r\n                _id\r\n                name\r\n                email\r\n                picture\r\n            }\r\n            chapters {\r\n                _id\r\n                name\r\n                order\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n            characters {\r\n                _id\r\n                name\r\n                last_edited\r\n                display_name\r\n                DOB \r\n                biography\r\n                uniqueness\r\n            }\r\n            timelines {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                box {\r\n                    _id\r\n                    id\r\n                    name\r\n                    date\r\n                    event\r\n                    character\r\n                    last_edited\r\n                }\r\n            }\r\n            maps {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst CREATE_CHAPTER_MUTATION = gql`\r\n    mutation($projectId: ID, $order: Int, $name: String, $characters: String, $content: String){\r\n        createChapter(projectId: $projectId, order: $order, name: $name, characters: $characters, content: $content){\r\n            _id\r\n            title\r\n            image\r\n            author\r\n            last_edited\r\n            version\r\n            old_id\r\n            summary\r\n            creator { \r\n                _id\r\n                name\r\n                email\r\n                picture\r\n            }\r\n            chapters {\r\n                _id\r\n                name\r\n                order\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n            characters {\r\n                _id\r\n                name\r\n                last_edited\r\n                display_name\r\n                DOB \r\n                biography\r\n                uniqueness\r\n            }\r\n            timelines {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                box {\r\n                    _id\r\n                    id\r\n                    name\r\n                    date\r\n                    event\r\n                    character\r\n                    last_edited\r\n                }\r\n            }\r\n            maps {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst DELETE_CHAPTER_MUTATION = gql`\r\n    mutation($projectId: ID, $chapterId: ID){\r\n        deleteChapter(projectId: $projectId, chapterId: $chapterId) {\r\n            _id\r\n            title\r\n            image\r\n            author\r\n            last_edited\r\n            version\r\n            old_id\r\n            summary\r\n            creator { \r\n                _id\r\n                name\r\n                email\r\n                picture\r\n            }\r\n            chapters {\r\n                _id\r\n                name\r\n                order\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n            characters {\r\n                _id\r\n                name\r\n                last_edited\r\n                display_name\r\n                DOB \r\n                biography\r\n                uniqueness\r\n            }\r\n            timelines {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                box {\r\n                    _id\r\n                    id\r\n                    name\r\n                    date\r\n                    event\r\n                    character\r\n                    last_edited\r\n                }\r\n            }\r\n            maps {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst CREATE_MAP_MUTATION = gql`\r\n    mutation($projectId: ID, $name: String, $characters: String){\r\n        createMap(projectId: $projectId, name: $name, characters: $characters){\r\n            _id\r\n            title\r\n            image\r\n            author\r\n            last_edited\r\n            version\r\n            old_id\r\n            summary\r\n            creator { \r\n                _id\r\n                name\r\n                email\r\n                picture\r\n            }\r\n            chapters {\r\n                _id\r\n                name\r\n                order\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n            characters {\r\n                _id\r\n                name\r\n                last_edited\r\n                display_name\r\n                DOB \r\n                biography\r\n                uniqueness\r\n            }\r\n            timelines {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                box {\r\n                    _id\r\n                    id\r\n                    name\r\n                    date\r\n                    event\r\n                    character\r\n                    last_edited\r\n                }\r\n            }\r\n            maps {\r\n                _id\r\n                name\r\n                characters\r\n                last_edited\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport {\r\n    CREATE_PROJECT_MUTATION,\r\n    SAVE_VERSION_MUTATION,\r\n    SET_VERSION_MUTATION,\r\n    UPDATE_PROJECT_MUTATION,\r\n    UPDATE_PROJECT_IMAGE_MUTATION,\r\n    DELETE_PROJECT_MUTATION, \r\n    CREATE_CHARACTER_MUTATION,\r\n    UPDATE_CHARACTER_MUTATION,\r\n    UPDATE_CHARACTER_IMAGE_MUTATION,\r\n    DELETE_CHARACTER_MUTATION,\r\n    CREATE_NEW_TIMELINE_MUTATION,\r\n    CREATE_TIMELINE_BOX_MUTATION,\r\n    UPDATE_TIMELINE_MUTATION,\r\n    DELETE_TIMELINE_MUTATION,\r\n    CREATE_CHAPTER_MUTATION,\r\n    DELETE_CHAPTER_MUTATION,\r\n    CREATE_MAP_MUTATION\r\n}","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Typography } from '@material-ui/core'\r\nimport { Button } from '@mui/material';\r\n\r\n\r\nexport default function ConfirmDialog(props) {\r\n\r\n    const { confirmDialog, setConfirmDialog } = props;\r\n    \r\n\r\n    return (\r\n        <Dialog open={confirmDialog.isOpen}>\r\n            <DialogTitle>\r\n                \r\n            </DialogTitle>\r\n            <DialogContent >\r\n                <Typography variant=\"h6\">\r\n                    {confirmDialog.title}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    {confirmDialog.subTitle}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions >\r\n                <Button onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })}>\r\n                    ยกเลิก\r\n                </Button>\r\n                <Button onClick={confirmDialog.onConfirm}>\r\n                    ยืนยัน\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport Grid from '@mui/material/Grid';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Button, CardActionArea } from '@mui/material';\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Context from '../../context';\r\nimport { useClient } from \"../../client\";\r\nimport { GET_USER_PROJECTS } from \"../../graphql/queries\";\r\nimport { SAVE_VERSION_MUTATION, DELETE_PROJECT_MUTATION } from \"../../graphql/mutations\";\r\nimport ConfirmDialog from '../../components/ConfirmDialog'\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport ScheduleIcon from '@mui/icons-material/Schedule';\r\n\r\nfunction ProjectList(){\r\n  \r\nconst [openOkSave, setOpenOkSave] = useState(false);\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpenOkSave(false);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const client = useClient();\r\n  const {state, dispatch} = useContext(Context);\r\n  const {currentUser} = state;\r\n  const [userProjects, setUserProjects] = useState([]);\r\n  const [confirmDialog, setConfirmDialog ] = useState({isOpen: false, title: '', subTitle: ''})\r\n\r\n  const getUserProjects = async () => {\r\n    const id = currentUser._id;\r\n    const variables = {creator: id, version: false}\r\n    const userProjects = await client.request(GET_USER_PROJECTS, variables);\r\n    if(userProjects){\r\n      setUserProjects(userProjects.Projects)\r\n      dispatch({ type: \"GET_USER_PROJECTS\", payload: userProjects })\r\n    }else{\r\n      console.log(\"can't find projects\")\r\n    }\r\n  }\r\n\r\n  const saveVersion = async (projectId) => {\r\n    setConfirmDialog({\r\n      ...confirmDialog,\r\n      isOpen: false\r\n    })\r\n    const id = currentUser._id;\r\n    const variables = {creator: id, version: true}\r\n    const projects = await client.request(GET_USER_PROJECTS, variables);\r\n    const allVersions = projects.Projects.filter(e => e.old_id === projectId);\r\n    if(allVersions){\r\n      console.log(allVersions);\r\n      const length = allVersions.length\r\n      const saveVersionVar = {projectId, number: length}\r\n      const saveVersionAdded = await client.request(SAVE_VERSION_MUTATION, saveVersionVar);\r\n      console.log('save version added', saveVersionAdded);\r\n    }else{\r\n      console.log('This project only have 1 versions')\r\n      const saveVersionVar = {projectId, number: 1}\r\n      const saveVersionAdded = await client.request(SAVE_VERSION_MUTATION, saveVersionVar);\r\n      console.log('save version added', saveVersionAdded);\r\n    }\r\n\r\n  }\r\n  \r\n  const deleteProject = async (id) => {\r\n    setConfirmDialog({\r\n      ...confirmDialog,\r\n      isOpen: false\r\n    })\r\n    const projectId = id\r\n    const creator = currentUser._id\r\n    const variables = {projectId, creator}\r\n    const projectDelete = await client.request(DELETE_PROJECT_MUTATION, variables)\r\n    if(projectDelete){\r\n      console.log(projectDelete)\r\n      getUserProjects();\r\n    }else{\r\n      console.log(\"error deleting project\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    \r\n     getUserProjects();\r\n  }, []);\r\n\r\n\r\n  const toMyProject = async(projectId) => {\r\n    navigate('/myproject');\r\n    localStorage.setItem(\"projectId\", projectId);\r\n    \r\n  }\r\n\r\n  const toVersionMenu = async(projectId) => {\r\n    navigate('/versionmenu');\r\n    localStorage.setItem(\"projectId\", projectId);\r\n    \r\n  }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Box\r\n          sx={{\r\n            bgcolor: 'background.paper',\r\n            pt: 8,\r\n            pb: 6,\r\n          }}\r\n        >\r\n          <Container maxWidth=\"sm\">\r\n          <Typography\r\n              variant=\"h3\"\r\n              align=\"center\"\r\n              color=\"text.primary\"\r\n            >\r\n              คลังผลงาน\r\n            </Typography>\r\n            <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" paragraph>\r\n                  คุณมีทั้งหมด {userProjects.length} ผลงาน\r\n            </Typography>\r\n          </Container>\r\n        </Box>\r\n        \r\n        <Grid container spacing={3} >\r\n          {userProjects.map(project =>{\r\n\r\n            const date = project.last_edited;\r\n            const dd = date.slice(8,10);\r\n            const mm_name = date.slice(4,7);\r\n            const mm_lowercase = mm_name.toLowerCase();\r\n            const months = [\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"];\r\n            const mm_number = months.indexOf(mm_lowercase) + 1\r\n            var mm = ''\r\n            if(mm_number < 10){ mm = '0' + mm_number }else{ mm = mm_number }\r\n            const yyyy = date.slice(11,15);\r\n            const last_edit_date = dd + '/' + mm + '/' + yyyy;\r\n\r\n            return(\r\n\r\n                <Grid item key={project._id} xs={12} sm={6} md={4}>\r\n\r\n                  <Dialog open={openOkSave} onClose={handleClose}>\r\n                    <DialogTitle>บันทึกสำเร็จ</DialogTitle>\r\n                    <DialogContent>\r\n                    เวลาที่บันทึก : 26/02/2022\r\n            \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      \r\n                      <Button onClick={handleClose}>ปิด</Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n\r\n                  <Card\r\n                  sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}                  \r\n                  >\r\n                    <CardActionArea \r\n                      onClick={() => toMyProject(project._id)}\r\n                    >\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        height=\"120\"\r\n                        sx={{\r\n                        }}\r\n                        image={project.image}\r\n                      />\r\n                      <CardContent sx={{ flexGrow: 1 }}>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          {project.title}\r\n                        </Typography>\r\n                        <Typography >\r\n                          แก้ไขล่าสุดเมื่อ: {last_edit_date}\r\n                        </Typography>\r\n                        \r\n                      </CardContent>\r\n                      </CardActionArea>\r\n                      \r\n                      <Box sx={{  display: \"flex\", justifyContent: \"flex-end\"}}>\r\n                        <Button\r\n                          size=\"large\"\r\n                          onClick={() => {\r\n                            setConfirmDialog({\r\n                              isOpen: true,\r\n                              title: 'ต้องการลบผลงานนี้หรือไม่',\r\n                              subTitle: '',\r\n                              onConfirm: () => {deleteProject(project._id)}\r\n                            })\r\n                          }} \r\n                        >\r\n                          X\r\n                        </Button>\r\n                        <Button \r\n                          size=\"large\" \r\n                          onClick={() => {\r\n                            setConfirmDialog({\r\n                              isOpen: true,\r\n                              title: 'บันทึกเวอร์ชั่นล่าสุดหรือไม่',\r\n                              subTitle: '',\r\n                              onConfirm: () => {saveVersion(project._id)}\r\n                            })\r\n                          }}\r\n                        >\r\n                          <SaveIcon/>\r\n                        </Button>\r\n                        <Button size=\"large\" onClick={() => toVersionMenu(project._id)} >\r\n                          <ScheduleIcon/>\r\n                        </Button>\r\n                        </Box>\r\n                    <ConfirmDialog\r\n                      confirmDialog={confirmDialog}\r\n                      setConfirmDialog={setConfirmDialog}\r\n                    /> \r\n                  </Card>\r\n                </Grid>\r\n              \r\n            )\r\n          })}\r\n          </Grid>\r\n          \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;\r\n","import * as React from 'react';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { Link } from 'react-router-dom';\r\nimport Fab from '@mui/material/Fab';\r\n\r\nexport default function ButtonNewProject() {\r\n\r\n  const floatingMenuButtonStyle = {\r\n    backgroundColor: '#967969', \r\n    color: '#FFFFFF',\r\n    alignSelf: 'flex-end',\r\n    position: 'fixed',\r\n    bottom: '5%',\r\n    right: '8%' }\r\n\r\n    return (\r\n          <Fab \r\n          color=\"primary\" \r\n          variant=\"contained\"  \r\n          \r\n          style={floatingMenuButtonStyle}\r\n          component={Link} to='/create-project'>\r\n            <AddIcon />\r\n          \r\n          </Fab>\r\n           );\r\n        }","import React from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport MainProjectHeader from \"../../components/MainProjectHeader\";\r\nimport Container from '@mui/material/Container';\r\nimport { createMuiTheme, ThemeProvider } from '@mui/material/styles';\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from '@apollo/client';\r\nimport ProjectList from './ProjectList';\r\nimport ButtonNewProject from './ButtonNewProject';\r\nrequire(\"dotenv\").config();\r\n\r\nconst client = new ApolloClient({\r\n  uri:process.env.SERVER_URI\r\n});\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n       main: \"#967969\" // This is an orange looking color\r\n              },\r\n    secondary: {\r\n       main: \"#F2D2BD\" //Another orange-ish color\r\n               }\r\n          },\r\n  \r\n  });\r\n\r\nexport default function MyProject() {\r\n\r\n  return (\r\n\r\n    <ApolloProvider client={client}>\r\n    <ThemeProvider theme={theme}>\r\n      <MainProjectHeader/>\r\n      <main>\r\n        <Box\r\n          sx={{\r\n            bgcolor: 'background.paper',\r\n            pb: 6,\r\n          }}\r\n        >\r\n          <Container maxWidth=\"md\" >\r\n            <ProjectList/>\r\n          </Container>\r\n        </Box>\r\n        <Box display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          minHeight=\"20vh\">\r\n        <ButtonNewProject/>\r\n        </Box>\r\n      </main>\r\n    </ThemeProvider>\r\n    </ApolloProvider>  \r\n  );\r\n}","import React,{useState, useContext} from \"react\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport TextField from '@mui/material/TextField';\r\nimport {Button} from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport { Grid } from \"@mui/material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { FormControlLabel } from \"@mui/material\";\r\nimport { Checkbox } from \"@mui/material\";\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport Container from '@mui/material/Container';\r\nimport Context from '../../context';\r\nimport { useClient } from '../../client';\r\nimport { CREATE_PROJECT_MUTATION} from '../../graphql/mutations';\r\nimport config from '../../config.json'\r\nrequire(\"dotenv\").config();\r\n\r\nconst theme = createTheme();\r\n\r\nfunction AddProject(){\r\n  \r\n  const navigate = useNavigate();\r\n  const client = useClient();\r\n  const {dispatch} = useContext(Context);\r\n \r\n  const [title, setTitle] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [summary, setSummary] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const handleImageUpload = async () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image)\r\n    data.append(\"upload_preset\", \"Novelis\")\r\n    data.append(\"cloud_name\", \"myimagevideocloud\")\r\n    const res = await axios.post( config.CLOUDINARY_URL, data )\r\n    return res.data.url\r\n  }\r\n\r\n  const handleSubmit = async event =>{\r\n    try{\r\n      event.preventDefault();\r\n      setSubmitting(true);\r\n      const url = await handleImageUpload();\r\n      console.log({title, image, url, author, summary})\r\n      const variables = {title, image: url, author, summary}\r\n      const {createProject} = await client.request(CREATE_PROJECT_MUTATION, variables)\r\n      dispatch({ type: \"CREATE_PROJECT\", payload: createProject})\r\n      console.log(\"Project created\",{createProject});\r\n      setSubmitting(false);\r\n      if(submitting === false){\r\n      navigate('/main-project')\r\n      }\r\n    }catch(err){\r\n      setSubmitting(false);\r\n      console.log(\"Error creating project\", err);\r\n    }\r\n        \r\n  }\r\n\r\n        return(\r\n            <form\r\n            component=\"form\"\r\n            sx={{\r\n                '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n            }}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            >\r\n            <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"sm\" sx={{ mb: 4 }}>\r\n                <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                สร้างผลงาน\r\n                </Typography>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                <Typography variant=\"subtitle2\" gutterBottom>\r\n                ใส่รูปหน้าปกผลงาน *\r\n                </Typography>\r\n                  <input \r\n                    accept=\"imge/*\"\r\n                    type=\"file\"\r\n                    onChange={e => setImage(e.target.files[0])}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  name=\"title\"\r\n                  id=\"title\"\r\n                  label=\"ชื่อผลงาน\"\r\n                  fullWidth\r\n                  variant=\"standard\"\r\n                  onChange={e => setTitle(e.target.value)}\r\n                  \r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    required\r\n                    id=\"author\"\r\n                    name=\"author\"\r\n                    label=\"นามปากกา\"\r\n                    fullWidth\r\n                    autoComplete=\"family-name\"\r\n                    variant=\"standard\"\r\n                    onChange={e => setAuthor(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"summary\"\r\n                    name=\"summary\"\r\n                    label=\"เรื่องย่อ\"\r\n                    type=\"passtextword\"\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                    onChange={e => setSummary(e.target.value)}\r\n                  />\r\n                </Grid>      \r\n                <Grid item xs={12}>\r\n                  <FormControlLabel\r\n                    control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n                    label=\"อยู่ระหว่างแก้ไข\"\r\n                  />\r\n                </Grid>\r\n                </Grid>\r\n                <Button \r\n                  variant=\"contained\" \r\n                  endIcon={<AddCircleIcon />} \r\n                  onClick={handleSubmit} \r\n                  disabled={!title.trim() || !author.trim() || !image || submitting} \r\n                >\r\n                  สร้างผลงาน\r\n                </Button>\r\n                </Paper>\r\n              </Container>\r\n            </ThemeProvider>\r\n            </form>\r\n        );\r\n}\r\n\r\nexport default AddProject;","import React from \"react\";\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from 'react-apollo';\r\nimport AddProject from \"./AddProject\";\r\nimport MainProjectHeader from '../../components/MainProjectHeader';\r\nrequire(\"dotenv\").config();\r\n\r\n\r\nconst client = new ApolloClient({\r\n  uri: process.env.SERVER_URI\r\n});\r\n\r\nfunction CreateProject(){\r\n    return(\r\n    <ApolloProvider client={client}>\r\n      <MainProjectHeader/>\r\n      <AddProject/>\r\n    </ApolloProvider>\r\n    )\r\n};\r\n\r\nexport default  CreateProject;","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Box from '@mui/material/Box';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport Paper from '@mui/material/Paper';\r\nimport AlbumIcon from '@mui/icons-material/Album';\r\nimport AccessibilityNewIcon from '@mui/icons-material/AccessibilityNew';\r\nimport HubIcon from '@mui/icons-material/Hub';\r\nimport SchemaIcon from '@mui/icons-material/Schema';\r\nimport BorderColorIcon from '@mui/icons-material/BorderColor';\r\n\r\n\r\n\r\n function BottomNav() {\r\n  \r\n  const pathname = window.location.pathname; // in case user visits the path directly. The BottomNavBar is able to follow suit.\r\n  const [value, setValue] = React.useState(pathname);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  \r\n\r\n  return (\r\n    <Box sx={{ pb: 7 }} >\r\n      <CssBaseline />\r\n      <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\r\n        <BottomNavigation\r\n          value={value} onChange={handleChange} showLabels={true}\r\n        >\r\n          <BottomNavigationAction \r\n            label=\"ตัวละคร\" \r\n            value='/mycharacter' \r\n            icon={<AccessibilityNewIcon/>} \r\n            component={Link}\r\n            to='/mycharacter' \r\n          />\r\n          <BottomNavigationAction \r\n            label=\"แผนผัง\" \r\n            value='/mymap' \r\n            icon={<HubIcon />} \r\n            component={Link} to='/mymap' \r\n          />\r\n          <BottomNavigationAction \r\n            label=\"หน้าหลัก\" \r\n            value='/myproject' \r\n            icon={<AlbumIcon />} \r\n            component={Link} to='/myproject' \r\n          />\r\n          <BottomNavigationAction \r\n            label=\"ไทม์ไลน์\" \r\n            value='/mytimeline' \r\n            icon={<SchemaIcon />} \r\n            component={Link} to='/mytimeline' \r\n          />\r\n          <BottomNavigationAction \r\n            label=\"เนื้อเรื่อง\" \r\n            value='/mystory' \r\n            icon={<BorderColorIcon />} \r\n            component={Link} to='/mystory' \r\n          />\r\n        </BottomNavigation>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default BottomNav;\r\n","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Button from '@mui/material/Button';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { Stack } from '@mui/material';\r\n\r\nexport default function SearchAutocomplete() {\r\n  const [value, setValue] = React.useState(null);\r\n  const [open, toggleOpen] = React.useState(false);\r\n\r\n  const handleClose = () => {\r\n    setDialogValue({\r\n      title: '',\r\n      year: '',\r\n    });\r\n\r\n    toggleOpen(false);\r\n  };\r\n\r\n  const [dialogValue, setDialogValue] = React.useState({\r\n    title: '',\r\n    year: '',\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValue({\r\n      title: dialogValue.title,\r\n      year: parseInt(dialogValue.year, 10),\r\n    });\r\n\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Autocomplete\r\n        value={value}\r\n        onChange={(event, New) => {\r\n         toggleOpen(true);\r\n          if ( New === 1) {\r\n            // timeout to avoid instant validation of the dialog's form.\r\n            toggleOpen(true);\r\n\r\n          }\r\n        }}\r\n      \r\n\r\n  \r\n        id=\"free-solo-dialog-demo\"\r\n        options={top100Films}\r\n        getOptionLabel={(option) => {\r\n          // e.g value selected with enter, right from the input\r\n          if (typeof option === 'string') {\r\n            toggleOpen(true);\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            toggleOpen(true);\r\n            return option.inputValue;\r\n          }\r\n          return option.title;\r\n        }}\r\n        selectOnFocus\r\n        clearOnBlur\r\n        handleHomeEndKeys\r\n        renderOption={(props, option) => <li {...props}>{option.title}</li>}\r\n        sx={{ width: 300 }}\r\n        freeSolo\r\n        \r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"standard\"\r\n            \r\n            InputProps={{\r\n              ...params.InputProps,\r\n              startAdornment: (\r\n                <>\r\n                  <SearchIcon />\r\n                  {params.InputProps.startAdornment}\r\n                </>\r\n              )\r\n            }}\r\n          />\r\n        )}\r\n\r\n      />\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <form onSubmit={handleSubmit}>\r\n          <DialogTitle>ผลการค้นหา</DialogTitle>\r\n          <DialogContent> \r\n            <Stack spacing={2}>\r\n            <DialogContentText>\r\n              ตัวละครนี้ปรากฎใน\r\n            </DialogContentText>\r\n           \r\n            <Button  variant=\"contained\" endIcon={<SendIcon />}>\r\n            ตอนที่1 : ความโชคดีในวันที่อับโชค\r\n          </Button>\r\n          <Button variant=\"contained\" endIcon={<SendIcon />}>\r\n          ตอนที่2 : เข้าสู่โลกแห่งฝัน\r\n          </Button>\r\n          <Button variant=\"contained\" endIcon={<SendIcon />}>\r\n          ไทม์ไลน์ : โลกความ\r\n          </Button>\r\n          <Button variant=\"contained\" endIcon={<SendIcon />}>\r\n          ไทม์ไลน์ : โลกความฝัน\r\n          </Button>\r\n          </Stack>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            \r\n            <Button onClick={handleClose}>ปิด</Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst top100Films = [\r\n  { title: 'ซาร่า(นางเอก)', year: 1994 },\r\n  { title: 'ปีเตอร์(พระเอก)', year: 1972 },\r\n  { title: 'เดวิด', year: 1974 },\r\n  \r\n];","import React, {useContext} from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SearchAutocomplete from './SearchAutocomplete';\r\nimport Context from '../context';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Header() {\r\n  const {state} = useContext(Context);\r\n  const {currentUser} = state;\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const {dispatch} = useContext(Context)\r\n\r\n  const onLogout = () => {\r\n    dispatch({type: \"LOGOUT_USER\"});\r\n    console.log(\"Logged out\");\r\n  }\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem>\r\n        <GoogleLogout\r\n          buttonText='Logout'\r\n          onLogoutSuccess={onLogout}\r\n        />\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      \r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n      <Tooltip title=\"Open settings\">\r\n        <IconButton sx={{ p: 0 }}>\r\n          {currentUser && (<Avatar alt=\"Remy Sharp\" src={currentUser.picture} />)}\r\n        </IconButton>\r\n        </Tooltip>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\" style={{ background: '#967969' }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{ mr: 2 }}\r\n            component={Link}\r\n            to=\"/main-project\"\r\n\r\n          >\r\n            <HomeIcon />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: 'none', sm: 'block' } }}\r\n          >\r\n            Novelis\r\n          </Typography>\r\n          \r\n            \r\n            \r\n             <SearchAutocomplete/>\r\n          \r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n            \r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n               {currentUser && (<Avatar alt=\"Remy Sharp\" src={currentUser.picture} />)}\r\n               \r\n            </IconButton>\r\n          </Box>\r\n          <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Zoom from '@mui/material/Zoom';\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Box from '@mui/material/Box';\r\nimport AccessibilityNewIcon from '@mui/icons-material/AccessibilityNew';\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`action-tabpanel-${index}`}\r\n        aria-labelledby={`action-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\nconst fabStyle = {\r\n    position: 'absolute',\r\n    bottom: 16,\r\n    right: 16,\r\n  };\r\n  \r\n  export default function CharBox( {CharactersCount}) {\r\n    const theme = useTheme();\r\n    const [value] = React.useState(0);\r\n  \r\n    const fabs = [\r\n      {\r\n        color: 'primary',\r\n        sx: fabStyle,\r\n        icon: <AddIcon />,\r\n        label: 'Add',\r\n      },\r\n    ];\r\n  \r\n    return (\r\n      <Box\r\n        sx={{\r\n          bgcolor: 'background.paper',\r\n           //ปรับขนาดกล่อง\r\n          position: 'relative',\r\n          height: '100%', display: 'flex', flexDirection: 'column'\r\n        }}\r\n      >\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={value}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            aria-label=\"action tabs example\"\r\n            tabInlineLabel=\"true\"\r\n          >\r\n            <Tab label={<div>ตัวละคร  <AccessibilityNewIcon style={{verticalAlign: 'middle'}} />  </div>}  /> 'แก้ชื่อ'\r\n            \r\n          </Tabs>\r\n        </AppBar>\r\n          <TabPanel value={value} index={0} dir={theme.direction} >\r\n            มีทั้งหมด {CharactersCount} ตัวละคร\r\n          </TabPanel>\r\n          \r\n        {fabs.map((fab, index) => (\r\n          <Zoom\r\n            key={fab.color}\r\n            in={value === index}\r\n            unmountOnExit\r\n          >\r\n            <Fab sx={fab.sx} aria-label={fab.label} color={fab.color}>\r\n              {fab.icon}\r\n            </Fab>\r\n          </Zoom>\r\n        ))}\r\n      </Box>\r\n    );\r\n  }\r\n  ","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Zoom from '@mui/material/Zoom';\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Box from '@mui/material/Box';\r\nimport HubIcon from '@mui/icons-material/Hub';\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`action-tabpanel-${index}`}\r\n        aria-labelledby={`action-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\nconst fabStyle = {\r\n    position: 'absolute',\r\n    bottom: 16,\r\n    right: 16,\r\n  };\r\n  \r\n\r\n  \r\n  export default function MapBox({MapsCount}) {\r\n    const theme = useTheme();\r\n    const [value] = React.useState(0);\r\n  \r\n    const fabs = [\r\n      {\r\n        color: 'primary',\r\n        sx: fabStyle,\r\n        icon: <AddIcon />,\r\n        label: 'Add',\r\n      },\r\n    ];\r\n  \r\n    return (\r\n      <Box\r\n        sx={{\r\n          bgcolor: 'background.paper',\r\n           //ปรับขนาดกล่อง\r\n          position: 'relative',\r\n          minHeight: 200,\r\n        }}\r\n      >\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={value}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            aria-label=\"action tabs example\"\r\n            tabInlineLabel=\"true\"\r\n          >\r\n            <Tab label={<div>ผังแสดงความสัมพันธ์ <HubIcon style={{verticalAlign: 'middle'}} />  </div>}  /> 'แก้ชื่อ'\r\n            \r\n          </Tabs>\r\n        </AppBar>\r\n\r\n          <TabPanel value={value} index={0} dir={theme.direction}>\r\n            มีทั้งหมด {MapsCount} แผนผัง\r\n          </TabPanel>\r\n        {fabs.map((fab, index) => (\r\n          <Zoom\r\n            key={fab.color}\r\n            in={value === index}\r\n            unmountOnExit\r\n          >\r\n            <Fab sx={fab.sx} aria-label={fab.label} color={fab.color}>\r\n              {fab.icon}\r\n            </Fab>\r\n          </Zoom>\r\n        ))}\r\n      </Box>\r\n    );\r\n  }\r\n  ","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Zoom from '@mui/material/Zoom';\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Box from '@mui/material/Box';\r\nimport SchemaIcon from '@mui/icons-material/Schema';\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`action-tabpanel-${index}`}\r\n        aria-labelledby={`action-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\nconst fabStyle = {\r\n    position: 'absolute',\r\n    bottom: 16,\r\n    right: 16,\r\n  };\r\n  \r\n  export default function TLBox( {TimelineCount} ) {\r\n    const theme = useTheme();\r\n    const [value] = React.useState(0);\r\n  \r\n    const fabs = [\r\n      {\r\n        color: 'primary',\r\n        sx: fabStyle,\r\n        icon: <AddIcon />,\r\n        label: 'Add',\r\n      },\r\n    ];\r\n  \r\n    return (\r\n      <Box\r\n        sx={{\r\n          bgcolor: 'background.paper',\r\n           //ปรับขนาดกล่อง\r\n          position: 'relative',\r\n          minHeight: 200,\r\n        }}\r\n      >\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={value}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            aria-label=\"action tabs example\"\r\n            tabInlineLabel=\"true\"\r\n          >\r\n            <Tab label={<div>ไทม์ไลน์  <SchemaIcon style={{verticalAlign: 'middle'}} />  </div>}  /> 'แก้ชื่อ'\r\n            \r\n          </Tabs>\r\n        </AppBar>\r\n        \r\n          <TabPanel value={value} index={0} dir={theme.direction}>\r\n            มีทั้งหมด {TimelineCount} ไทม์ไลน์\r\n          </TabPanel>\r\n        {fabs.map((fab, index) => (\r\n          <Zoom\r\n            key={fab.color}\r\n            in={value === index}\r\n            unmountOnExit\r\n          >\r\n            <Fab sx={fab.sx} aria-label={fab.label} color={fab.color}>\r\n              {fab.icon}\r\n            </Fab>\r\n          </Zoom>\r\n        ))}\r\n      </Box>\r\n    );\r\n  }\r\n  ","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Zoom from '@mui/material/Zoom';\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Box from '@mui/material/Box';\r\nimport BorderColorIcon from '@mui/icons-material/BorderColor';\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`action-tabpanel-${index}`}\r\n        aria-labelledby={`action-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\nconst fabStyle = {\r\n    position: 'absolute',\r\n    bottom: 16,\r\n    right: 16,\r\n  };\r\n  \r\n  \r\n  export default function WBox({ChaptersCount}) {\r\n    const theme = useTheme();\r\n    const [value] = React.useState(0);\r\n  \r\n    const fabs = [\r\n      {\r\n        color: 'primary',\r\n        sx: fabStyle,\r\n        icon: <AddIcon />,\r\n        label: 'Add',\r\n      },\r\n    ];\r\n  \r\n    return (\r\n      <Box\r\n        sx={{\r\n          bgcolor: 'background.paper',\r\n           //ปรับขนาดกล่อง\r\n          position: 'relative',\r\n          minHeight: 200,\r\n        }}\r\n      >\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={value}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            aria-label=\"action tabs example\"\r\n            tabInlineLabel=\"true\"\r\n          >\r\n            <Tab label={<div>เนื้อเรื่อง  <BorderColorIcon style={{verticalAlign: 'middle'}} />  </div>}  /> 'แก้ชื่อ'\r\n            \r\n          </Tabs>\r\n        </AppBar>\r\n        \r\n          {/* <TabPanel value={value} index={0} dir={theme.direction}>\r\n          ตอนที่1 : เตรียมตัวการเดินทาง       \r\n          <br/>\r\n          ตอนที่2 : สู่โลกกว้าง \r\n          </TabPanel> */}\r\n          <TabPanel value={value} index={0} dir={theme.direction}>\r\n            มีทั้งหมด {ChaptersCount} ตอน\r\n          </TabPanel>\r\n        {fabs.map((fab, index) => (\r\n          <Zoom\r\n            key={fab.color}\r\n            in={value === index}\r\n            unmountOnExit\r\n          >\r\n            <Fab sx={fab.sx} aria-label={fab.label} color={fab.color}>\r\n              {fab.icon}\r\n            </Fab>\r\n          </Zoom>\r\n        ))}\r\n      </Box>\r\n    );\r\n  }\r\n  ","import * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { createMuiTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Header from '../../components/Header';\r\nimport CharBox from './CharBox';\r\nimport MapBox from './MapBox';\r\nimport TLBox from './TLBox';\r\nimport WBox from './WBox';\r\nimport { TextField } from '@mui/material';\r\nimport Fab from '@mui/material/Fab';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport { useClient } from \"../../client\";\r\nimport { SELECTED_PROJECT } from \"../../graphql/queries\";\r\nimport { UPDATE_PROJECT_MUTATION, UPDATE_PROJECT_IMAGE_MUTATION } from \"../../graphql/mutations\";\r\nimport Context from '../../context';\r\nimport config from '../../config.json'\r\nrequire(\"dotenv\").config();\r\n\r\nconst mdTheme = createMuiTheme({\r\n  palette: {\r\n  primary: {\r\n     main: \"#967969\" // This is an orange looking color\r\n            },\r\n  secondary: {\r\n     main: \"#F2D2BD\" //Another orange-ish color\r\n             }\r\n        },\r\n\r\n});\r\nfunction ProjectDetails(){\r\n \r\n  const {state, dispatch} = useContext(Context);\r\n  const {currentProject} = state;\r\n  const client = useClient();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [summary, setSummary] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [charactersCount, setCharactersCount] = useState(0);\r\n  const [timelinesCount, setTimelinesCount] = useState(0);\r\n  const [chaptersCount, setChaptersCount] = useState(0);\r\n  const [mapsCount, setMapsCount] = useState(0);\r\n  \r\n\r\n  const getProjectDetails = async () => {\r\n\r\n    const projectId = localStorage.getItem(\"projectId\");\r\n   \r\n    const variables = {_id: projectId}\r\n    const project = await client.request(SELECTED_PROJECT, variables);\r\n\r\n    if(project){\r\n      console.log(project.selectedProject);\r\n      setTitle(project.selectedProject.title);\r\n      setImage(project.selectedProject.image);\r\n      setAuthor(project.selectedProject.author);\r\n      setSummary(project.selectedProject.summary);\r\n      setCharactersCount(project.selectedProject.characters.length);\r\n      setTimelinesCount(project.selectedProject.timelines.length);\r\n      setMapsCount(project.selectedProject.maps.length);\r\n      setChaptersCount(project.selectedProject.chapters.length);\r\n      dispatch({type: \"SELECT_PROJECT\", payload: project.selectedProject});\r\n    }else{\r\n      console.log(\"Can't find project details\");\r\n    }\r\n  }\r\n  \r\n  const handleImageUpload = async () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image)\r\n    data.append(\"upload_preset\", \"Novelis\")\r\n    data.append(\"cloud_name\", \"myimagevideocloud\")\r\n    const res = await axios.post( config.CLOUDINARY_URL, data )\r\n    return res.data.url\r\n  }\r\n\r\n  const updateProject = async event => {\r\n    try{\r\n      event.preventDefault();\r\n      setSubmitting(true);\r\n      console.log({title, author, summary})\r\n      const projectId = currentProject._id\r\n      const variables = {projectId, title, author, summary}\r\n      const updatedProject = await client.request(UPDATE_PROJECT_MUTATION, variables)\r\n      console.log(\"Project updated\",{updatedProject});\r\n      setSubmitting(false);\r\n    }catch(err){\r\n      setSubmitting(false);\r\n      console.log(\"Error updating project\", err);\r\n    }\r\n  }\r\n\r\n  const updateProjectImage = async event => {\r\n    try{\r\n      event.preventDefault();\r\n      setSubmitting(true);\r\n      const url = await handleImageUpload();\r\n      const projectId = currentProject._id\r\n      const variables = {projectId, image: url}\r\n      const updatedProject = await client.request(UPDATE_PROJECT_IMAGE_MUTATION, variables)\r\n      \r\n      console.log(\"Project updated\",{updatedProject});\r\n      setSubmitting(false);\r\n    }catch(err){\r\n      setSubmitting(false);\r\n      console.log(\"Error updating project\", err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProjectDetails();\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    \r\n    <ThemeProvider theme={mdTheme}>\r\n        <Header/>\r\n        <Box sx={{ display: 'flex' }}>\r\n          <CssBaseline />\r\n          <Box\r\n            component=\"main\"\r\n            sx={{\r\n              backgroundColor: (theme) =>\r\n                theme.palette.mode === 'light'\r\n                  ? theme.palette.grey[100]\r\n                  : theme.palette.grey[900],\r\n              flexGrow: 1,\r\n              height: '100vh',\r\n              overflow: 'auto',\r\n            }}\r\n          >\r\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            <Grid container spacing={3} >\r\n              {/* Chart */}\r\n\r\n              <Grid item xs={12} align=\"center\"> \r\n                <Paper\r\n                    sx={{ //แก้ไข\r\n                      p: 4,\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                        //ปรับขนาด\r\n                      height:560,\r\n                      gap: 2,\r\n                      \r\n                    }}\r\n                  >\r\n                <Grid item xs={12}>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  height=\"140\"\r\n                  sx={{ width: 151 }}\r\n                  image={image}\r\n                  //alt=\"random\"\r\n                />\r\n\r\n                <input \r\n                  type=\"file\"\r\n                  accept=\"imge/*\"\r\n                  onChange={e => setImage(e.target.files[0])}\r\n                />\r\n                <Fab \r\n                  variant=\"extended\" \r\n                  size=\"small\" \r\n                  color=\"primary\" \r\n                  aria-label=\"add\"\r\n                  onClick={updateProjectImage}\r\n                  disabled={submitting}\r\n                >\r\n                  บันทึกการแก้ไขรูปภาพ\r\n                  <CheckIcon />\r\n                </Fab>\r\n                </Grid>\r\n\r\n                <TextField\r\n                  id=\"outlined-uncontrolled\"\r\n                  label=\"แก้ไขชื่อผลงาน\"\r\n                  value={title || ''}\r\n                  multiline={true}\r\n                  justifyContent=\"center\"\r\n                  align=\"center\"\r\n                  onChange={e => setTitle(e.target.value)}\r\n                />\r\n\r\n                <TextField\r\n                  id=\"outlined-uncontrolled\"\r\n                  label=\"แก้ไขนามปากกา\"\r\n                  value={author || ''}\r\n                  multiline={true}\r\n                  justifyContent=\"center\"\r\n                  onChange={e => setAuthor(e.target.value)}\r\n                />\r\n\r\n\r\n                <TextField\r\n                  id=\"outlined-uncontrolled\"\r\n                  label=\"แก้ไขเรื่องย่อ\"\r\n                  value={summary || ''}\r\n                  multiline={true}\r\n                  justifyContent=\"center\"\r\n                  rows={2}\r\n                  maxRows={2}\r\n                  onChange={e => setSummary(e.target.value)}\r\n                />\r\n\r\n                <Fab \r\n                  variant=\"extended\" \r\n                  size=\"small\" \r\n                  color=\"primary\" \r\n                  aria-label=\"add\"\r\n                  onClick={updateProject}\r\n                  disabled={submitting}\r\n                >\r\n                  บันทึกการแก้ไข\r\n                  <CheckIcon />\r\n                </Fab>\r\n                </Paper>\r\n              </Grid>      \r\n              <Grid item xs={12} md={8} lg={6}> \r\n              <Paper\r\n                  sx={{ //กล่อง1\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                      //ปรับขนาด\r\n                    height: 220,\r\n                  }}\r\n                >\r\n                  <CharBox CharactersCount={charactersCount}/> \r\n                </Paper>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={8} lg={6}>\r\n                <Paper\r\n                  sx={{ //กล่อง2\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                      //ปรับขนาด\r\n                    height: 220,\r\n                  }}\r\n                >\r\n                  <TLBox TimelineCount={timelinesCount}/> \r\n                </Paper>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}> \r\n              <Paper\r\n                  sx={{ //กล่อง3\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                      //ปรับขนาด\r\n                    height: 220,\r\n                  }}\r\n                >\r\n                  <MapBox MapsCount={mapsCount}/> \r\n                </Paper>\r\n              </Grid>\r\n\r\n              <Grid item  xs={12}>\r\n                <Paper\r\n                  sx={{ //กล่อง4\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                      //ปรับขนาด\r\n                    height: 400,\r\n                  }}\r\n                >\r\n                  <WBox ChaptersCount={chaptersCount}/> \r\n                </Paper>\r\n              </Grid>\r\n              <Grid item  xs={12}>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </Box>\r\n      </Box>\r\n      \r\n    </ThemeProvider>\r\n   \r\n  );\r\n}\r\n\r\nexport default ProjectDetails;","import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { createMuiTheme, ThemeProvider } from '@mui/material/styles';\r\nimport BottomNav from '../../components/BottomNav';\r\nimport ProjectDetails from './ProjectDetails';\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from '@apollo/client';\r\nrequire(\"dotenv\").config();\r\n\r\n\r\nconst mdTheme = createMuiTheme({\r\n  palette: {\r\n  primary: {\r\n     main: \"#967969\" // This is an orange looking color\r\n            },\r\n  secondary: {\r\n     main: \"#F2D2BD\" //Another orange-ish color\r\n             }\r\n        },\r\n\r\n});\r\n\r\nfunction MyProject(){\r\n\r\n  const client = new ApolloClient({\r\n    uri: process.env.SERVER_URI\r\n  });\r\n  \r\n  const location = useLocation();\r\n  const data = location.state;\r\n  const [thisProjectId, setThisProjectId] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(data){\r\n      console.log(data.selectedProjectId)\r\n      setThisProjectId(data.selectedProjectId)\r\n      \r\n    }\r\n  }, [data]);\r\n\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <ThemeProvider theme={mdTheme}>\r\n      <ProjectDetails/>\r\n      <BottomNav thisProjectId={thisProjectId}/>\r\n      </ThemeProvider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default MyProject;","import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`action-tabpanel-${index}`}\r\n        aria-labelledby={`action-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\n  \r\nexport default function CBox({CharacterName, last_edited, characterId, DisplayName, Image, dob, uniqueness1, uniqueness2}) {\r\n\r\n    const navigate = useNavigate();\r\n    const [converted_dob, setConvert_dob] = useState(\"\");\r\n\r\n    const convertLastEdit = (dob) => {\r\n      const dob_yyyy = dob.slice(0,4)\r\n      const dob_mm = dob.slice(5,7)\r\n      const dob_dd = dob.slice(8,10)\r\n      const new_dob = dob_dd + '/' + dob_mm + '/' + dob_yyyy;\r\n      setConvert_dob(new_dob)\r\n    }\r\n\r\n    const toCharacterDetails = async(characterId) => {\r\n      navigate('/characterdetails');\r\n      localStorage.setItem(\"characterId\", characterId);\r\n      \r\n    }\r\n  useEffect(() => {\r\n    if(dob){\r\n      convertLastEdit(dob);\r\n    }\r\n  }, []);\r\n\r\n    return (\r\n      \r\n      <Card sx={{ display: 'flex' }} onClick={() => toCharacterDetails(characterId)}>\r\n      <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n        <CardContent sx={{ flex: '1 0 auto' }}>\r\n          <Typography component=\"div\" variant=\"h5\">\r\n            {DisplayName}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\"  component=\"div\">\r\n            {CharacterName}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\"  component=\"div\">\r\n            วันเกิด: {converted_dob}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\"  component=\"div\">\r\n            -{uniqueness1} -{uniqueness2}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\"  component=\"div\">\r\n            แก้ไขล่าสุดเมื่อ: {last_edited}\r\n          </Typography>\r\n        </CardContent>\r\n        \r\n      </Box>\r\n      <Box  sx={{  display: \"flex\", justifyContent: \"flex-end\"}}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        sx={{ width: 151 }}\r\n        image={Image}\r\n        alt=\"character image\"\r\n      />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}","import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport CBox from './CBox';\r\nimport { useClient } from \"../../client\";\r\nimport { SELECTED_PROJECT } from \"../../graphql/queries\";\r\n\r\n  \r\n  const floatingMenuButtonStyle = {\r\n    alignSelf: 'flex-end',\r\n    position: 'fixed',\r\n    bottom: '3%',\r\n    right: '2%' \r\n  }\r\n\r\n\r\nfunction CharacterList(){\r\n\r\n  const client = useClient();\r\n  const projectId = localStorage.getItem(\"projectId\");\r\n  const [characters, setCharacters] = useState([]);\r\n\r\n  const getCharacters = async () => {\r\n    const variables = {_id: projectId}\r\n    const data = await client.request(SELECTED_PROJECT, variables);\r\n    if(data){\r\n      setCharacters(data.selectedProject.characters)\r\n    }else{\r\n      console.log(\"null\")\r\n    }\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    getCharacters();\r\n  }, []);\r\n    return(\r\n           \r\n      <Box sx={{ display: 'flex' }}>\r\n        <CssBaseline />\r\n        <Box\r\n          component=\"main\"\r\n          sx={{\r\n            backgroundColor: (theme) =>\r\n              theme.palette.mode === 'light'\r\n                ? theme.palette.grey[100]\r\n                : theme.palette.grey[900],\r\n            flexGrow: 1,\r\n            height: '100vh',\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n\r\n            <Grid container spacing={3} >\r\n\r\n            <Grid item xs={12}>\r\n            <Paper\r\n                  sx={{ \r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    height: 100,\r\n                  }}\r\n                >\r\n          <Typography variant=\"h6\" gutterBottom align=\"center\" sx={{ p: 3}}>\r\n          ตัวละคร\r\n        </Typography>\r\n          </Paper>\r\n          </Grid>\r\n            {characters.map(character => {\r\n              const date = character.last_edited;\r\n              const dd = date.slice(8,10);  \r\n              const mm_name = date.slice(4,7);\r\n              const mm_lowercase = mm_name.toLowerCase();\r\n              const months = [\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"];\r\n              const mm_number = months.indexOf(mm_lowercase) + 1\r\n              var mm = ''\r\n              if(mm_number < 10){ mm = '0' + mm_number }else{ mm = mm_number }\r\n              const yyyy = date.slice(11,15);\r\n              const last_edit_date = dd + '/' + mm + '/' + yyyy;\r\n              \r\n              return(\r\n\r\n                    <Grid item key={character._id} xs={12} md={8} lg={6}> \r\n                          <CBox \r\n                            CharacterName={character.name} \r\n                            DisplayName={character.display_name}\r\n                            Image={character.image}\r\n                            last_edited={last_edit_date}\r\n                            characterId={character._id}\r\n                            dob={character.DOB}\r\n                            uniqueness1={character.uniqueness[0] || ''}\r\n                            uniqueness2={character.uniqueness[1] || ''}\r\n                          /> \r\n                    </Grid>\r\n\r\n              )\r\n            })}\r\n              \r\n            </Grid>\r\n\r\n            <Fab \r\n            style={floatingMenuButtonStyle}\r\n            color=\"primary\"\r\n            sx={{ my:8, mx:4, }}  \r\n            component={Link} to='/editcharacter'\r\n            >\r\n            <AddIcon />\r\n            </Fab>\r\n            \r\n          </Container>\r\n        </Box>\r\n      </Box>\r\n      \r\n    \r\n    );\r\n}\r\n\r\nexport default CharacterList;","import * as React from 'react';\r\nimport { createMuiTheme, ThemeProvider } from '@mui/material/styles';\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from '@apollo/client';\r\nimport CharacterList from './CharacterList';\r\n\r\nimport BottomNav from '../../components/BottomNav';\r\nimport Header from '../../components/Header';\r\nrequire(\"dotenv\").config();\r\n\r\n\r\nconst mdTheme = createMuiTheme({\r\n  palette: {\r\n  primary: {\r\n     main: \"#967969\" // This is an orange looking color\r\n            },\r\n  secondary: {\r\n     main: \"#F2D2BD\" //Another orange-ish color\r\n             }\r\n        },\r\n\r\n});\r\nfunction MyCharacter() {\r\n\r\n  const client = new ApolloClient({\r\n    uri:process.env.SERVER_URI\r\n  });\r\n  \r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <ThemeProvider theme={mdTheme}>\r\n        <Header/>\r\n        <CharacterList />\r\n        <BottomNav/>\r\n      \r\n      \r\n      </ThemeProvider>\r\n    </ApolloProvider>\r\n    \r\n  );\r\n}\r\n\r\n\r\nexport default MyCharacter;","import React,{useState, useContext, useEffect} from \"react\";\r\nimport { useNavigate} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport TextField from '@mui/material/TextField';\r\nimport {Button} from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport { Grid } from \"@mui/material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { FormControlLabel } from \"@mui/material\";\r\nimport { Checkbox } from \"@mui/material\";\r\nimport { createMuiTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport Container from '@mui/material/Container';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport Context from '../../context';\r\nimport { useClient } from '../../client';\r\nimport { CREATE_CHARACTER_MUTATION} from '../../graphql/mutations';\r\nimport config from '../../config.json'\r\nrequire(\"dotenv\").config();\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n  primary: {\r\n     main: \"#967969\" // This is an orange looking color\r\n            },\r\n  secondary: {\r\n     main: \"#F2D2BD\" //Another orange-ish color\r\n             }\r\n        },\r\n\r\n});\r\n\r\n\r\nfunction AddCharacter() {\r\n    \r\n  const {state} = useContext(Context);\r\n  const {currentProject} = state;\r\n  const navigate = useNavigate();\r\n  const client = useClient();\r\n  const [name, setName] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [display_name, setDisplay_name] = useState(\"\");\r\n  var now = new Date();\r\n  var isoString = now.toISOString().slice(0,10)\r\n  const [dob, setDOB] = useState(isoString);\r\n  const [biography, setBiography] = useState(\"\");\r\n  const [uniqueness, setUniqueness] = useState([]);\r\n  const [uniquenessInput, setUniquenessInput] = useState([]);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  \r\n\r\n  useEffect(() => {\r\n    setUniqueness([\"\"])\r\n    console.log(currentProject._id)\r\n  }, [])\r\n\r\n  const addMoreUniqness = e => {\r\n    e.preventDefault();\r\n    setUniqueness([...uniqueness, \"uniqness\"]);\r\n  }\r\n\r\n  const addUniqnessInput = (i,e) => {\r\n    const items = uniquenessInput;\r\n    if(e.target.value !== \"\"){\r\n      items[i] = e.target.value;\r\n      setUniquenessInput(items);\r\n      console.log(uniquenessInput)\r\n    }\r\n  }\r\n\r\n  const handleImageUpload = async () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image)\r\n    data.append(\"upload_preset\", \"Novelis\")\r\n    data.append(\"cloud_name\", \"myimagevideocloud\")\r\n    const res = await axios.post( config.CLOUDINARY_URL, data )\r\n    return res.data.url\r\n  }\r\n\r\n  const handleDateChange = e => {\r\n    const dateInput = e.target.value\r\n    setDOB(dateInput)\r\n    console.log(dob)\r\n  }\r\n\r\n  const handleSubmit = async event =>{\r\n    try{\r\n      event.preventDefault();\r\n      setSubmitting(true);\r\n      const url = await handleImageUpload();\r\n      const projectId = currentProject._id\r\n      const variables = {projectId, name, image: url, display_name, dob, biography, uniqueness: uniquenessInput}\r\n      const {createCharacter} = await client.request(CREATE_CHARACTER_MUTATION, variables)\r\n      console.log(\"Character created\",createCharacter);\r\n      setSubmitting(false);\r\n      if(submitting === false){\r\n        navigate('/mycharacter')\r\n      }\r\n    }catch(err){\r\n      setSubmitting(false);\r\n      console.log(\"Error creating character\", err);\r\n    }\r\n        \r\n  }\r\n    \r\n  return(\r\n    <form\r\n      component=\"form\"\r\n      sx={{\r\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n     <ThemeProvider theme={theme}>\r\n     <Container component=\"main\" maxWidth=\"sm\" sx={{ mb: 4 }}>\r\n        <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n        สร้างตัวละคร\r\n        </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <input \r\n            type=\"file\"\r\n            onChange={e => setImage(e.target.files[0])}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"Character Name\"\r\n            label=\"ชื่อตัวละคร\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            onChange={e => setName(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"nickName\"\r\n            name=\"nickName\"\r\n            label=\"ชื่อที่แสดง\"\r\n            fullWidth\r\n            autoComplete=\"family-name\"\r\n            variant=\"standard\"\r\n            onChange={e => setDisplay_name(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"birth_date\"\r\n            label=\"วันเกิด \"\r\n            type=\"date\"\r\n            sx={{ width: 220 }}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            value={dob}\r\n            onChange={handleDateChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"background\"\r\n            label=\"ประวัติตัวละคร\"\r\n            type=\"passtextword\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            onChange={e => setBiography(e.target.value)}\r\n          />\r\n        </Grid>\r\n        {uniqueness.map((item, i) =>{\r\n          var count = uniquenessInput.length;\r\n          return(\r\n             <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                id=\"city\"\r\n                name=\"city\"\r\n                label='เอกลักษณ์'\r\n                fullWidth\r\n                variant=\"standard\"\r\n                onChange={(e) => addUniqnessInput(count,e)}\r\n              />\r\n            </Grid>\r\n          )\r\n        }\r\n          \r\n        )}\r\n        \r\n        <Grid item xs={12} sm={6}>\r\n          <Button \r\n            variant=\"contained\" \r\n            endIcon={<AddCircleIcon />} \r\n            type=\"submit\" \r\n            onClick={addMoreUniqness}\r\n          >\r\n            เพิ่มเอกลักษณ์\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n            label=\"กำลังแก้ไข\"\r\n          />\r\n        </Grid>\r\n          </Grid>\r\n\r\n                <Button \r\n                  variant=\"contained\" \r\n                  endIcon={<CheckIcon />} \r\n                  type=\"submit\" \r\n                  color=\"success\"\r\n                  onClick={handleSubmit}\r\n                  >\r\n                    บันทึกข้อมูล\r\n                </Button>\r\n                </Paper>\r\n      </Container>\r\n    </ThemeProvider>\r\n            </form>\r\n        );\r\n    \r\n}\r\n\r\nexport default AddCharacter;","import React from \"react\";\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from 'react-apollo';\r\nimport { createMuiTheme, ThemeProvider } from '@mui/material/styles';\r\nimport AddCharacter from \"./AddCharacter\";\r\nimport Header from '../../components/Header';\r\nimport BottomNav from '../../components/BottomNav';\r\nrequire(\"dotenv\").config();\r\n\r\n\r\nconst mdTheme = createMuiTheme({\r\n  palette: {\r\n  primary: {\r\n     main: \"#967969\" // This is an orange looking color\r\n            },\r\n  secondary: {\r\n     main: \"#F2D2BD\" //Another orange-ish color\r\n             }\r\n        },\r\n\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  uri: process.env.SERVER_URI\r\n});\r\n\r\nconst cloudinary = process.env.CLOUDINARY_URL\r\n\r\nfunction CreateProject(){\r\n    return(\r\n    <ApolloProvider client={client}>\r\n      <ThemeProvider theme={mdTheme}>\r\n      <Header/>\r\n      <AddCharacter cloudinary={cloudinary}/>\r\n      <BottomNav/>\r\n      </ThemeProvider>\r\n    </ApolloProvider>\r\n    )\r\n};\r\n\r\nexport default  CreateProject;\r\n","import React,{useState, useContext, useEffect} from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport TextField from '@mui/material/TextField';\r\nimport {Button} from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport { Grid } from \"@mui/material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { FormControlLabel } from \"@mui/material\";\r\nimport { Checkbox } from \"@mui/material\";\r\nimport { createMuiTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport Container from '@mui/material/Container';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Fab from '@mui/material/Fab';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport Context from '../../context';\r\nimport ConfirmDialog from '../../components/ConfirmDialog'\r\nimport { useClient } from '../../client';\r\nimport { SELECTED_PROJECT } from \"../../graphql/queries\";\r\nimport { UPDATE_CHARACTER_MUTATION, UPDATE_CHARACTER_IMAGE_MUTATION, DELETE_CHARACTER_MUTATION } from '../../graphql/mutations';\r\nimport config from '../../config.json'\r\nrequire(\"dotenv\").config();\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n  primary: {\r\n     main: \"#967969\" // This is an orange looking color\r\n            },\r\n  secondary: {\r\n     main: \"#F2D2BD\" //Another orange-ish color\r\n             }\r\n        },\r\n\r\n});\r\n\r\nfunction GetCharacterDetails() {\r\n    \r\n  const {state} = useContext(Context);\r\n  const {currentProject} = state;\r\n  const navigate = useNavigate();\r\n  const client = useClient();\r\n  const characterId = localStorage.getItem(\"characterId\")\r\n  const [name, setName] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [display_name, setDisplay_name] = useState(\"\");\r\n  var now = new Date();\r\n  var isoString = now.toISOString().slice(0,10)\r\n  const [dob, setDOB] = useState(isoString);\r\n  const [biography, setBiography] = useState(\"\");\r\n  const [uniqueness, setUniqueness] = useState([]);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [uniquenessInput, setUniquenessInput] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [confirmDialog, setConfirmDialog ] = useState({isOpen: false, title: '', subTitle: ''})\r\n\r\n  const findCharacter = async () => {\r\n    const projectId = localStorage.getItem(\"projectId\");\r\n    const projectVariable = {_id: projectId}\r\n    const project = await client.request(SELECTED_PROJECT, projectVariable);\r\n    const characterId =  localStorage.getItem(\"characterId\");\r\n    const character = await project.selectedProject.characters.find(e => e._id === characterId);\r\n    console.log(character);\r\n    if(character){\r\n      setName(character.name);\r\n      setImage(character.image);\r\n      setDisplay_name(character.display_name);\r\n      setDOB(character.DOB);\r\n      setBiography(character.biography);\r\n      setUniqueness(character.uniqueness);\r\n    }else{\r\n      console.log(\"can't find character details\");\r\n    }\r\n  }\r\n\r\n  const handleDateChange = e => {\r\n    const dateInput = e.target.value\r\n    setDOB(dateInput)\r\n    console.log(dob)\r\n  }\r\n\r\n  const handleImageUpload = async () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image)\r\n    data.append(\"upload_preset\", \"Novelis\")\r\n    data.append(\"cloud_name\", \"myimagevideocloud\")\r\n    const res = await axios.post( config.CLOUDINARY_URL, data )\r\n    return res.data.url\r\n  }\r\n\r\n  const getUniquenessInput = (i, e) => {\r\n    const items = uniquenessInput;\r\n    if(e.target.value !== \"\"){\r\n      items[i] = e.target.value;\r\n      setUniquenessInput(items);\r\n      console.log(\"hi\")\r\n      setCount(count+1);\r\n    }\r\n  }\r\n\r\n  const updateCharacter = async event =>{\r\n    try{\r\n      event.preventDefault();\r\n      setSubmitting(true);\r\n      //const variables = {name, nickname, birth_date, background, uniqness_1, uniqness_2}\r\n      const projectId = currentProject._id\r\n      const characterId = localStorage.getItem(\"characterId\");\r\n      const variables = {projectId, characterId, name, display_name, dob, biography}\r\n      const updateCharacter = await client.request(UPDATE_CHARACTER_MUTATION, variables)\r\n      console.log(\"Character updated\", updateCharacter);\r\n      setSubmitting(false);\r\n    }catch(err){\r\n      setSubmitting(false);\r\n      console.log(\"Error updating character\", err);\r\n    }\r\n        \r\n  }\r\n\r\n  const updateCharacterImage = async event =>{\r\n    try{\r\n      event.preventDefault();\r\n      setSubmitting(true);\r\n      const projectId = currentProject._id\r\n      const characterId = localStorage.getItem(\"characterId\");\r\n      const url = await handleImageUpload();\r\n      const variables = {projectId, characterId, image: url}\r\n      const updateCharacter = await client.request(UPDATE_CHARACTER_IMAGE_MUTATION, variables)\r\n      console.log(\"Character updated\", updateCharacter);\r\n      setSubmitting(false);\r\n    }catch(err){\r\n      setSubmitting(false);\r\n      console.log(\"Error updating character\", err);\r\n    }     \r\n  }\r\n\r\n  const deleteCharacter = async event=> {\r\n    event.preventDefault();\r\n    setConfirmDialog({\r\n      ...confirmDialog,\r\n      isOpen: false\r\n    })\r\n    const characterId = localStorage.getItem(\"characterId\");\r\n    const projectId = currentProject._id\r\n    const variables = {characterId, projectId}\r\n    const deleteCharacter = await client.request(DELETE_CHARACTER_MUTATION, variables)\r\n    if(deleteCharacter){\r\n      console.log(deleteCharacter)\r\n      navigate('/mycharacter')\r\n    }else{\r\n      console.log('error deleting character')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(characterId)\r\n    findCharacter();\r\n    setCount(0); \r\n  }, []);\r\n\r\n  return(\r\n    <div>\r\n      <form\r\n      component=\"form\"\r\n      sx={{\r\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n      >\r\n     <ThemeProvider theme={theme}>\r\n     <Container component=\"main\" maxWidth=\"sm\" sx={{ mb: 4 }}>\r\n        <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n        ข้อมูลตัวละคร\r\n        </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"140\"\r\n            sx={{ width: 151 }}\r\n            image={image}\r\n            //alt=\"random\"\r\n          />\r\n          <input \r\n            type=\"file\"\r\n            accept=\"imge/*\"\r\n            \r\n            onChange={e => setImage(e.target.files[0])}\r\n          />\r\n          <Fab \r\n            variant=\"extended\" \r\n            size=\"small\" \r\n            color=\"primary\" \r\n            aria-label=\"add\"\r\n            onClick={updateCharacterImage}\r\n            disabled={submitting}\r\n          >\r\n            บันทึกการแก้ไขรูปภาพ\r\n            <CheckIcon />\r\n          </Fab>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"Character Name\"\r\n            label=\"ชื่อตัวละคร\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={name || ''}\r\n            onChange={e => setName(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"nickName\"\r\n            name=\"nickName\"\r\n            label=\"ชื่อที่แสดง\"\r\n            fullWidth\r\n            autoComplete=\"family-name\"\r\n            variant=\"standard\"\r\n            value={display_name || ''}\r\n            onChange={e => setDisplay_name(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"birth_date\"\r\n            label=\"วันเกิด \"\r\n            type=\"date\"\r\n            sx={{ width: 220 }}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            value={dob}\r\n            onChange={handleDateChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"background\"\r\n            label=\"ประวัติตัวละคร\"\r\n            type=\"passtextword\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={biography|| ''}\r\n            onChange={e => setBiography(e.target.value)}\r\n          />\r\n        </Grid>\r\n        {uniqueness.map(item => {\r\n          \r\n          return(\r\n            <Grid item key={item} xs={12} sm={6}>\r\n              <TextField\r\n                id=\"city\"\r\n                name=\"city\"\r\n                label=\"เอกลักษณ์\"\r\n                fullWidth\r\n                autoComplete=\"shipping address-level2\"\r\n                variant=\"standard\"\r\n                value={item || ''}\r\n                onLoad={e => getUniquenessInput(count, e)}\r\n              />\r\n            </Grid>\r\n          )\r\n        })}\r\n        \r\n        \r\n        <Grid item xs={12} sm={6}>\r\n        <Button variant=\"contained\" endIcon={<AddCircleIcon />} type=\"submit\" >\r\n                \r\n                    เพิ่มเอกลักษณ์\r\n        </Button>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n            label=\"กำลังแก้ไข\"\r\n          />\r\n        </Grid>\r\n          </Grid>\r\n                <Button\r\n                  variant=\"contained\" \r\n                  endIcon={<ClearIcon/>}  \r\n                  color=\"error\"\r\n                  onClick={() => {\r\n                    setConfirmDialog({\r\n                      isOpen: true,\r\n                      title: 'ต้องการลบตัวละครนี้หรือไม่',\r\n                      subTitle: '',\r\n                      onConfirm: (e) => {deleteCharacter(e)}\r\n                    })\r\n                  }} \r\n                >\r\n                  ลบตัวละคร\r\n                </Button>\r\n                <Button \r\n                  variant=\"contained\" \r\n                  endIcon={<CheckIcon />} \r\n                  type=\"submit\" \r\n                  color=\"success\"\r\n                  onClick={updateCharacter}\r\n                >\r\n                  บันทึกการแก้ไข\r\n                </Button>\r\n            </Paper>\r\n          </Container>\r\n        </ThemeProvider>\r\n      </form>\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </div>\r\n    \r\n        );\r\n    \r\n}\r\n\r\nexport default GetCharacterDetails;","import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { useLocation} from 'react-router-dom';\r\nimport { createMuiTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Header from '../../components/Header';\r\nimport BottomNav from '../../components/BottomNav';\r\nimport GetCharacterDetails from './GetCharacterDetails';\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from '@apollo/client';\r\nrequire(\"dotenv\").config();\r\n\r\n\r\nconst mdTheme = createMuiTheme({\r\n  palette: {\r\n  primary: {\r\n     main: \"#967969\" // This is an orange looking color\r\n            },\r\n  secondary: {\r\n     main: \"#F2D2BD\" //Another orange-ish color\r\n             }\r\n        },\r\n\r\n});\r\n\r\nfunction CharacterDetails() {\r\n\r\n  const client = new ApolloClient({\r\n    uri: process.env.SERVER_URI\r\n  });\r\n \r\n  const location = useLocation();\r\n  const data = location.state;\r\n  const [thisProjectId, setThisProjectId] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(data){\r\n      console.log(data.selectedProjectId)\r\n      setThisProjectId(data.selectedProjectId)\r\n      \r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <ThemeProvider theme={mdTheme}>\r\n      <Header/>\r\n      <GetCharacterDetails/>\r\n      <BottomNav thisProjectId={thisProjectId}/>\r\n      </ThemeProvider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default CharacterDetails;","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Zoom from '@mui/material/Zoom';\r\nimport Fab from '@mui/material/Fab';\r\nimport Box from '@mui/material/Box';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`action-tabpanel-${index}`}\r\n        aria-labelledby={`action-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\nconst fabStyle = {\r\n    position: 'absolute',\r\n    bottom: 16,\r\n    right: 16,\r\n  };\r\n  \r\n  export default function FloatingActionButtonZoom({MappingName, LastEdited}) {\r\n    const theme = useTheme();\r\n    const [value] = React.useState(0);\r\n  \r\n    const fabs = [\r\n      {\r\n        color: 'primary',\r\n        sx: fabStyle,\r\n        icon: <SettingsIcon />,\r\n        label: 'Add',\r\n      },\r\n    ];\r\n  \r\n    return (\r\n      <Box\r\n        sx={{\r\n          bgcolor: 'background.paper',\r\n           //ปรับขนาดกล่อง\r\n          position: 'relative',\r\n          minHeight: 200,\r\n        }}\r\n      >\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={value}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            aria-label=\"action tabs example\"\r\n          >\r\n            <Tab label={MappingName} />\r\n        \r\n          </Tabs>\r\n        </AppBar>\r\n        \r\n          <TabPanel value={value} index={0} dir={theme.direction}>\r\n            แก้ไขล่าสุดเมื่อ: {LastEdited}\r\n          </TabPanel>\r\n        {fabs.map((fab, index) => (\r\n          <Zoom\r\n            key={fab.color}\r\n            in={value === index}\r\n            unmountOnExit\r\n          >\r\n            <Fab sx={fab.sx} aria-label={fab.label} color={fab.color}>\r\n              {fab.icon}\r\n            </Fab>\r\n          </Zoom>\r\n        ))}\r\n      </Box>\r\n    );\r\n  }\r\n  ","import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport CBox from './CBox';\r\nimport { useClient } from \"../../client\";\r\nimport { SELECTED_PROJECT } from \"../../graphql/queries\";\r\n\r\n\r\nfunction MapList(){\r\n\r\n  const client = useClient();\r\n  const projectId = localStorage.getItem(\"projectId\");\r\n  const [maps, setMaps] = useState([]);\r\n\r\n  const floatingMenuButtonStyle = {\r\n   \r\n    alignSelf: 'flex-end',\r\n    position: 'fixed',\r\n    bottom: '3%',\r\n    right: '2%' }\r\n\r\n  const getMaps = async () => {\r\n    const variables = {_id: projectId}\r\n    const data = await client.request(SELECTED_PROJECT, variables)\r\n    if(data){\r\n      setMaps(data.selectedProject.maps)\r\n    }else{\r\n      console.log(\"null\")\r\n    }\r\n  }\r\n \r\n  useEffect(() => {\r\n    getMaps();\r\n  }, []);\r\n\r\n  return(\r\n        <Box sx={{ display: 'flex' }}>\r\n          <CssBaseline />\r\n          \r\n          <Box\r\n            component=\"main\"\r\n            sx={{\r\n              backgroundColor: (theme) =>\r\n                theme.palette.mode === 'light'\r\n                  ? theme.palette.grey[100]\r\n                  : theme.palette.grey[900],\r\n              flexGrow: 1,\r\n              height: '100vh',\r\n              overflow: 'auto',\r\n            }}\r\n          >\r\n            \r\n            <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n\r\n              <Grid container spacing={3}>\r\n\r\n              <Grid item xs={12}>\r\n              <Paper\r\n                    sx={{ //กล่อง1\r\n                      p: 2,\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                        //ปรับขนาด\r\n                      height: 100,\r\n                    }}\r\n                  >\r\n            <Typography variant=\"h6\" gutterBottom align=\"center\" sx={{ p: 3}}>\r\n            แผนผัง\r\n            </Typography>\r\n            </Paper>\r\n            </Grid>\r\n              {maps.map(map => {\r\n\r\n                const date = map.last_edited;\r\n                const dd = date.slice(8,10);\r\n                        \r\n                const mm_name = date.slice(4,7);\r\n                const mm_lowercase = mm_name.toLowerCase();\r\n                const months = [\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"];\r\n                const mm_number = months.indexOf(mm_lowercase) + 1\r\n                var mm = ''\r\n                if(mm_number < 10){ mm = '0' + mm_number }else{ mm = mm_number }\r\n            \r\n                const yyyy = date.slice(11,15);\r\n            \r\n                const last_edit_date = dd + '/' + mm + '/' + yyyy;\r\n\r\n                return(\r\n                  <Grid item key={map._id} xs={12} md={8} lg={6}> \r\n                    <Paper\r\n                        sx={{ //กล่อง1\r\n                          p: 2,\r\n                          display: 'flex',\r\n                          flexDirection: 'column',\r\n                            //ปรับขนาด\r\n                          height: 220,\r\n                        }}\r\n                      >\r\n                      <CBox MappingName={map.name} LastEdited={last_edit_date}/> \r\n                    </Paper>\r\n                  </Grid>\r\n                )\r\n              })}\r\n              \r\n              </Grid>\r\n              \r\n              <Fab \r\n              style={floatingMenuButtonStyle}\r\n              color=\"primary\"\r\n                sx={{\r\n                  my:8,\r\n                  mx:4,  \r\n                }} \r\n                component={Link} to='/editmap'\r\n              >\r\n                  <AddIcon />\r\n                  </Fab>\r\n            </Container>\r\n          </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MapList;","import * as React from 'react';\r\nimport { createMuiTheme, ThemeProvider } from '@mui/material/styles';\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from '@apollo/client';\r\nimport Header from '../../components/Header';\r\nimport BottomNav from '../../components/BottomNav';\r\nimport MapList from './MapList';\r\nrequire(\"dotenv\").config();\r\n\r\n\r\n\r\nconst mdTheme = createMuiTheme({\r\n  palette: {\r\n  primary: {\r\n     main: \"#967969\" // This is an orange looking color\r\n            },\r\n  secondary: {\r\n     main: \"#F2D2BD\" //Another orange-ish color\r\n             }\r\n        },\r\n\r\n});\r\n\r\nfunction MyMap() {\r\n\r\n  const client = new ApolloClient({\r\n    uri:process.env.SERVER_URI\r\n  });\r\n\r\n  //const [open, setOpen] = React.useState(true);\r\n  // const toggleDrawer = () => {\r\n  //   setOpen(!open);\r\n  // };\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n        <ThemeProvider theme={mdTheme}>\r\n          <Header/>\r\n          <MapList />\r\n        <BottomNav/>\r\n      </ThemeProvider>\r\n    </ApolloProvider>\r\n    \r\n  );\r\n}\r\n\r\n\r\nexport default MyMap;","import * as React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Zoom from '@mui/material/Zoom';\r\nimport Fab from '@mui/material/Fab';\r\nimport Box from '@mui/material/Box';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\n\r\nfunction TabPanel(props, ) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`action-tabpanel-${index}`}\r\n        aria-labelledby={`action-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\nconst fabStyle = {\r\n    position: 'absolute',\r\n    bottom: 16,\r\n    right: 16,\r\n  };\r\n  \r\n  \r\nexport default function CBox({ChapterName, LastEdited, ChapterId}) {\r\n    const theme = useTheme();\r\n    const [value] = React.useState(0);\r\n    const navigate = useNavigate();\r\n  \r\n    const fabs = [\r\n      {\r\n        color: 'primary',\r\n        sx: fabStyle,\r\n        icon: <SettingsIcon />,\r\n        label: 'Add',\r\n      },\r\n    ];\r\n  \r\n    const toChapterDetail = async(chapterId) => {\r\n      navigate('/chapterdetail');\r\n      localStorage.setItem(\"chapterId\", chapterId);\r\n    }\r\n\r\n    return (\r\n      <Box\r\n        sx={{\r\n          bgcolor: 'background.paper',\r\n           //ปรับขนาดกล่อง\r\n          position: 'relative',\r\n          minHeight: 200,\r\n        }}\r\n        onClick={() => toChapterDetail(ChapterId)}\r\n      >\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={value}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            aria-label=\"action tabs example\"\r\n          >\r\n            <Tab label={ChapterName}/>\r\n        \r\n          </Tabs>\r\n        </AppBar>\r\n        \r\n          <TabPanel value={value} index={0} dir={theme.direction}>\r\n          {/* แก้ไขล่าสุดเมื่อ: 17/01/2022 */}\r\n          แก้ไขล่าสุดเมื่อ: {LastEdited}\r\n          </TabPanel>\r\n        {fabs.map((fab, index) => (\r\n          <Zoom\r\n            key={fab.color}\r\n            in={value === index}\r\n            unmountOnExit\r\n          >\r\n            <Fab sx={fab.sx} aria-label={fab.label} color={fab.color}>\r\n              {fab.icon}\r\n            </Fab>\r\n          </Zoom>\r\n        ))}\r\n      </Box>\r\n    );\r\n  }\r\n  ","import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Fab from '@mui/material/Fab';\r\nimport CBox from './CBox';\r\nimport { useClient } from \"../../client\";\r\nimport { SELECTED_PROJECT } from \"../../graphql/queries\";\r\n\r\nfunction ChapterList(){\r\n\r\n  const client = useClient();\r\n  const projectId = localStorage.getItem(\"projectId\");\r\n  const [chapters, setChapters] = useState([]);\r\n\r\n  const getChapters = async () => {\r\n    const variables = {_id: projectId}\r\n    const data = await client.request(SELECTED_PROJECT, variables)\r\n    if(data){\r\n      setChapters(data.selectedProject.chapters)\r\n    }else{\r\n      console.log(\"null\")\r\n    }\r\n  }\r\n\r\n  const floatingMenuButtonStyle = {\r\n    alignSelf: 'flex-end',\r\n    position: 'fixed',\r\n    bottom: '3%', \r\n    right: '2%' \r\n  }\r\n\r\n  useEffect(() => {\r\n    getChapters();\r\n  }, []);\r\n\r\n    return(\r\n        <Box sx={{ display: 'flex' }}>\r\n        <CssBaseline />\r\n        \r\n        <Box\r\n          component=\"main\"\r\n          sx={{\r\n            backgroundColor: (theme) =>\r\n              theme.palette.mode === 'light'\r\n                ? theme.palette.grey[100]\r\n                : theme.palette.grey[900],\r\n            flexGrow: 1,\r\n            height: '100vh',\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          \r\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n\r\n            <Grid container spacing={3}>\r\n\r\n            <Grid item xs={12}>\r\n            <Paper\r\n                  sx={{ //กล่อง1\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                      //ปรับขนาด\r\n                    height: 100,\r\n                  }}\r\n                >\r\n            <Typography variant=\"h6\" gutterBottom align=\"center\" sx={{ p: 3}}>\r\n            เนื้อเรื่อง\r\n            </Typography>\r\n          </Paper>\r\n          </Grid>\r\n            \r\n            {chapters.map(chapter => {\r\n\r\n              const date = chapter.last_edited;\r\n              const dd = date.slice(8,10);\r\n                      \r\n              const mm_name = date.slice(4,7);\r\n              const mm_lowercase = mm_name.toLowerCase();\r\n              const months = [\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"];\r\n              const mm_number = months.indexOf(mm_lowercase) + 1\r\n              var mm = ''\r\n              if(mm_number < 10){ mm = '0' + mm_number }else{ mm = mm_number }\r\n          \r\n              const yyyy = date.slice(11,15);\r\n          \r\n              const last_edit_date = dd + '/' + mm + '/' + yyyy;\r\n\r\n                return(\r\n                    <Grid item key={chapter._id} xs={12} md={8} lg={6}> \r\n                        <Paper\r\n                            sx={{ //กล่อง1\r\n                                p: 2,\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                //ปรับขนาด\r\n                                height: 220,\r\n                            }}\r\n                        >\r\n                            <CBox ChapterName={chapter.name} LastEdited={last_edit_date} ChapterId={chapter._id}/> \r\n                        </Paper>\r\n                    </Grid>\r\n                )\r\n            })}\r\n\r\n            </Grid>\r\n\r\n            <Fab \r\n            style={floatingMenuButtonStyle}\r\n             color=\"primary\"\r\n            sx={{ my:8, mx:4, }} \r\n            component={Link} to='/editstory'\r\n            >\r\n                \r\n                <AddIcon />\r\n            </Fab>\r\n          </Container>\r\n        </Box>\r\n      </Box>\r\n    )\r\n}\r\n\r\nexport default ChapterList;","import * as React from 'react';\r\nimport { createMuiTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Header from '../../components/Header';\r\nimport BottomNav from '../../components/BottomNav';\r\nimport ChapterList from './ChapterList';\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from '@apollo/client';\r\nrequire(\"dotenv\").config();\r\n\r\n\r\nconst mdTheme = createMuiTheme({\r\n  palette: {\r\n  primary: {\r\n     main: \"#967969\" // This is an orange looking color\r\n            },\r\n  secondary: {\r\n     main: \"#F2D2BD\" //Another orange-ish color\r\n             }\r\n        },\r\n\r\n});\r\n\r\nfunction MyStory() {\r\n\r\n  const client = new ApolloClient({\r\n    uri:process.env.SERVER_URI\r\n  });\r\n\r\n  // const [open, setOpen] = React.useState(true);\r\n  // const toggleDrawer = () => {\r\n  //   setOpen(!open);\r\n  // };\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <ThemeProvider theme={mdTheme}>\r\n        <Header/>\r\n        <ChapterList />\r\n        <BottomNav/>\r\n      </ThemeProvider>\r\n    </ApolloProvider>\r\n    \r\n  );\r\n}\r\n\r\n\r\nexport default MyStory;","import * as React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Zoom from '@mui/material/Zoom';\r\nimport Fab from '@mui/material/Fab';\r\nimport Box from '@mui/material/Box';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`action-tabpanel-${index}`}\r\n        aria-labelledby={`action-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\nconst fabStyle = {\r\n    position: 'absolute',\r\n    bottom: 16,\r\n    right: 16,\r\n  };\r\n  \r\n  \r\n  export default function FloatingActionButtonZoom({TimelineName, TimelineId, LastEdited}) {\r\n\r\n    const theme = useTheme();\r\n    const [value] = React.useState(0);\r\n    const navigate = useNavigate();\r\n\r\n    const toTimelineDetails = async(timelineId) => {\r\n      navigate('/timelinedetails');\r\n      localStorage.setItem(\"timelineId\", timelineId);\r\n      \r\n    }\r\n\r\n    const fabs = [\r\n      {\r\n        color: 'primary',\r\n        sx: fabStyle,\r\n        icon: <SettingsIcon />,\r\n        label: 'Add',\r\n      },\r\n    ];\r\n  \r\n    return (\r\n      <Box\r\n        sx={{\r\n          bgcolor: 'background.paper',\r\n           //ปรับขนาดกล่อง\r\n          position: 'relative',\r\n          minHeight: 200,\r\n        }}\r\n        onClick={() => toTimelineDetails(TimelineId)}\r\n      >\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={value}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            aria-label=\"action tabs example\"\r\n          >\r\n            <Tab label={TimelineName}/>\r\n        \r\n          </Tabs>\r\n        </AppBar>\r\n        \r\n          <TabPanel value={value} index={0} dir={theme.direction}>\r\n          {/* แก้ไขล่าสุดเมื่อ: 17/01/2022 */}\r\n          แก้ไขล่าสุดเมื่อ: {LastEdited}\r\n          </TabPanel>\r\n        {fabs.map((fab, index) => (\r\n          <Zoom\r\n            key={fab.color}\r\n            in={value === index}\r\n            unmountOnExit\r\n          >\r\n            <Fab sx={fab.sx} aria-label={fab.label} color={fab.color}>\r\n              {fab.icon}\r\n            </Fab>\r\n          </Zoom>\r\n        ))}\r\n      </Box>\r\n    );\r\n  }\r\n  ","import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Fab from '@mui/material/Fab';\r\nimport CBox from './CBox';\r\nimport { useClient } from \"../../client\";\r\nimport { SELECTED_PROJECT } from \"../../graphql/queries\";\r\n\r\nfunction TimelineList(){\r\n\r\n  const client = useClient();\r\n  const projectId = localStorage.getItem(\"projectId\");\r\n  const [timelines, setTimelines] = useState([]);\r\n\r\n  const floatingMenuButtonStyle = {\r\n    alignSelf: 'flex-end',\r\n    position: 'fixed',\r\n    bottom: '3%',\r\n    right: '2%' \r\n  }\r\n\r\n  const getTimelines = async () => {\r\n    const variables = {_id: projectId}\r\n    const data = await client.request(SELECTED_PROJECT, variables)\r\n    if(data){\r\n      setTimelines(data.selectedProject.timelines)\r\n    }else{\r\n      console.log(\"null\")\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getTimelines();\r\n  }, []);\r\n\r\n    return(\r\n        <Box sx={{ display: 'flex' }}>\r\n          <CssBaseline />\r\n          \r\n          <Box\r\n            component=\"main\"\r\n            sx={{\r\n              backgroundColor: (theme) =>\r\n                theme.palette.mode === 'light'\r\n                  ? theme.palette.grey[100]\r\n                  : theme.palette.grey[900],\r\n              flexGrow: 1,\r\n              height: '100vh',\r\n              overflow: 'auto',\r\n            }}\r\n          >\r\n            \r\n            <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n\r\n            \r\n\r\n              <Grid container spacing={3}>\r\n\r\n              <Grid item xs={12}>\r\n              <Paper\r\n                    sx={{ //กล่อง1\r\n                      p: 2,\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                        //ปรับขนาด\r\n                      height: 100,\r\n                    }}\r\n                  >\r\n            <Typography variant=\"h6\" gutterBottom align=\"center\" sx={{ p: 3}}>\r\n            ไทม์ไลน์\r\n          </Typography>\r\n            </Paper>\r\n            </Grid>\r\n\r\n                {timelines.map(timeline => {\r\n                  const date = timeline.last_edited;\r\n                  const dd = date.slice(8,10);\r\n                          \r\n                  const mm_name = date.slice(4,7);\r\n                  const mm_lowercase = mm_name.toLowerCase();\r\n                  const months = [\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"];\r\n                  const mm_number = months.indexOf(mm_lowercase) + 1\r\n                  var mm = ''\r\n                  if(mm_number < 10){ mm = '0' + mm_number }else{ mm = mm_number }\r\n              \r\n                  const yyyy = date.slice(11,15);\r\n              \r\n                  const last_edit_date = dd + '/' + mm + '/' + yyyy;\r\n\r\n                    return(\r\n                        <Grid item key={timeline._id} xs={12} md={8} lg={6}> \r\n                            <Paper\r\n                                sx={{ //กล่อง1\r\n                                p: 2,\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                    //ปรับขนาด\r\n                                height: 220,\r\n                                }}\r\n                            >\r\n                                <CBox TimelineName={timeline.name} TimelineId={timeline._id} LastEdited={last_edit_date}/> \r\n                            </Paper>\r\n                        </Grid>   \r\n                    )\r\n                })}\r\n \r\n              </Grid>\r\n\r\n              <Fab\r\n              style={floatingMenuButtonStyle}\r\n                color=\"primary\"\r\n                sx={{\r\n                  \r\n                  my:8,\r\n                  mx:4,\r\n                  \r\n                }} \r\n\r\n                component={Link} to='/edittimeline'\r\n                >\r\n                  \r\n                  <AddIcon />\r\n                  </Fab>\r\n\r\n\r\n            </Container>\r\n          </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TimelineList;","import * as React from 'react';\r\nimport { ThemeProvider, createMuiTheme } from '@mui/material/styles';\r\nimport Header from '../../components/Header';\r\nimport BottomNav from '../../components/BottomNav';\r\nimport TimelineList from './TimelineList';\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from '@apollo/client';\r\nrequire(\"dotenv\").config();\r\n\r\nconst mdTheme = createMuiTheme({\r\n  palette: {\r\n  primary: {\r\n     main: \"#967969\" // This is an orange looking color\r\n            },\r\n  secondary: {\r\n     main: \"#F2D2BD\" //Another orange-ish color\r\n             }\r\n        },\r\n\r\n});\r\n\r\nfunction MyTimeline() {\r\n\r\n  const client = new ApolloClient({\r\n    uri:process.env.SERVER_URI\r\n  });\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <ThemeProvider theme={mdTheme}>\r\n          <Header/>\r\n          <TimelineList/>\r\n        <BottomNav/>\r\n      </ThemeProvider>\r\n    </ApolloProvider>\r\n    \r\n  );\r\n}\r\n\r\n\r\nexport default MyTimeline;","import React, {useContext} from \"react\";\r\nimport GoogleLogin from 'react-google-login';\r\nimport {GraphQLClient} from 'graphql-request'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport { createMuiTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Context from '../../context';\r\nimport { ME_QUERY } from \"../../graphql/queries\";\r\nimport { BASE_URL } from \"../../client\";\r\nimport config from '../../config.json'\r\nrequire(\"dotenv\").config();\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n  primary: {\r\n     main: \"#967969\" // This is an orange looking color\r\n            },\r\n  secondary: {\r\n     main: \"#F2D2BD\" //Another orange-ish color\r\n             }\r\n        },\r\n\r\n});\r\n\r\nfunction Login(){\r\n\r\n  const {dispatch} = useContext(Context)\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    console.log({\r\n      email: data.get('email'),\r\n      password: data.get('password'),\r\n    });\r\n  };\r\n  \r\n  const googleSuccess = async googleUser => {\r\n      console.log({googleUser});\r\n      try {\r\n        const idToken = googleUser.getAuthResponse().id_token;\r\n        const client = new GraphQLClient(BASE_URL, {\r\n          headers: {authorization: idToken}\r\n        })\r\n        const {me} = await client.request(ME_QUERY);\r\n        console.log({me});\r\n        dispatch({ type: \"LOGIN_USER\", payload: me });\r\n        dispatch({ type: \"IS_LOGGED_IN\", payload: googleUser.isSignedIn() });\r\n      } catch (error) {\r\n        googleFailure(error);\r\n      }\r\n      \r\n    };\r\n\r\n  const googleFailure = (error) => {\r\n      console.log(error);\r\n      console.log('Google Sign In was unsuccessful. Try again later.');\r\n    };\r\n  \r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Grid container component=\"main\" sx={{ height: '100vh' }}>\r\n          <CssBaseline />\r\n          <Grid\r\n            item\r\n            xs={false}\r\n            sm={4}\r\n            md={7}\r\n            sx={{\r\n              backgroundImage: 'url(https://source.unsplash.com/random)',\r\n              backgroundRepeat: 'no-repeat',\r\n              backgroundColor: (t) =>\r\n                t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\r\n              backgroundSize: 'cover',\r\n              backgroundPosition: 'center',\r\n            }}\r\n          />\r\n          <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n            <Box\r\n              sx={{\r\n                pt: 20,\r\n                my: 8,\r\n                mx: 4,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                เข้าสู่ระบบ\r\n              </Typography>\r\n              <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n                  <Grid container>\r\n                    <Grid item sx={{ mt: 3, mb: 2 }}>\r\n                      <GoogleLogin \r\n                        clientId={config.GOOGLE_CLIENT_ID}\r\n                        buttonText=\"Login with Google\"\r\n                        onSuccess={googleSuccess}\r\n                        onFailure={googleFailure}\r\n                        cookiePolicy={'single_host_origin'}\r\n                        isSignedIn={true}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                \r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    );\r\n  \r\n}\r\n\r\nexport default Login;","import React, {useContext} from \"react\";\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from 'react-apollo';\r\nimport {Navigate} from 'react-router-dom';\r\n\r\nimport Login from \"./Login\";\r\nimport Context from \"../../context\";\r\nrequire(\"dotenv\").config();\r\n\r\n\r\nconst client = new ApolloClient({\r\n  uri:process.env.SERVER_URI\r\n});\r\n\r\nexport default function LoginPage() {\r\n  const { state } = useContext(Context);\r\n  if(state.isAuth){\r\n    return(\r\n      <Navigate to=\"/main-project\"/>\r\n    );\r\n  }else{\r\n    return (\r\n    <ApolloProvider client={client}>\r\n      <Login /> \r\n    </ApolloProvider>  \r\n    );\r\n  }\r\n\r\n}\r\n","import \"./TimelineA.css\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { Box } from \"@mui/system\";\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Button } from \"@mui/material\";\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Stack from '@mui/material/Stack';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport Paper from '@mui/material/Paper';\r\nimport AddchartIcon from '@mui/icons-material/Addchart';\r\nimport DeviceHubIcon from '@mui/icons-material/DeviceHub';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport { useClient } from '../../client';\r\nimport { CREATE_NEW_TIMELINE_MUTATION } from '../../graphql/mutations';\r\n\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"#D2B48C\t\" : \"#f5ebe6\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n  background: isDraggingOver ? \"#483C32\t\" : \"#877e78\",\r\n  padding: grid,\r\n  width: 500\r\n});\r\n\r\n\r\n\r\nexport default function NewTimeline() {\r\n  const itemArray = [\r\n      {id: \"item-0\", name: \"\", date: \"\", event: \"\", character: \"\"},\r\n      {id: \"item-1\", name: \"\", date: \"\", event: \"\", character: \"\"},\r\n    ]\r\n  const client = useClient();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [items, setItems] = useState(itemArray);\r\n  const [timelineName, setTimelineName] = useState(\"\");\r\n  const [characters, setCharacters] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const floatingMenuButtonStyle = {\r\n    alignSelf: 'flex-end',\r\n    position: 'fixed',\r\n    bottom: '15%',\r\n    right: '10%' \r\n  }\r\n\r\n\r\n  const addEvent = (event) => {\r\n    var i = items.length;\r\n    event.preventDefault();\r\n    setItems([...items, {id: `item-${i}`, name: \"\", date: \"\", event: \"\", character: \"\"}])\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const onDragEnd = (result) => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const reorderedItems = reorder(\r\n      items,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    setItems(reorderedItems);\r\n  };\r\n\r\n  const pathname = window.location.pathname;\r\n  const [value, setValue] = React.useState(pathname);\r\n  const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n  };\r\n\r\n  const createBoxArray = () => {\r\n    var box = [];\r\n    items.forEach(item => {\r\n      var boxItem = {\r\n        id: `item-${items.indexOf(item)}`,\r\n        name: item.name,\r\n        date: item.date,\r\n        event: item.event,\r\n        character: item.character\r\n      }\r\n      box.push(boxItem)\r\n    })\r\n    return box\r\n  }\r\n\r\n  const addTimeline = async(e, index) => {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n    const projectId = localStorage.getItem(\"projectId\");\r\n    const box = createBoxArray();\r\n    console.log(box)\r\n    const variables = {projectId, name: timelineName, characters, box};\r\n    console.log(variables)\r\n    const createbox = await client.request(CREATE_NEW_TIMELINE_MUTATION , variables);\r\n    console.log(createbox);\r\n    setSubmitting(false);\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Box>\r\n      <TextField\r\n        id=\"outlined-uncontrolled\"\r\n        label=\"ชื่อไทม์ไลน์\"\r\n        multiline={false}\r\n        variant=\"standard\"\r\n        fullWidth\r\n        sx={{ mt: 1 }}\r\n        onChange={e => setTimelineName(e.target.value)}\r\n      />\r\n      <TextField\r\n        id=\"outlined-uncontrolled\"\r\n        label=\"ตัวละคร\"\r\n        multiline={false}\r\n        variant=\"standard\"\r\n        fullWidth\r\n        sx={{ mt: 1 }}\r\n        onChange={e => setCharacters(e.target.value)}\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <Droppable droppableId={\"droppable\"}>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n                style={getListStyle(snapshot.isDraggingOver)}\r\n              >\r\n                {items.map((item, idx) => (\r\n                  <Draggable key={item.id} draggableId={item.id} index={idx}>\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={getItemStyle(\r\n                          snapshot.isDragging,\r\n                          provided.draggableProps.style\r\n                        )}\r\n                      >\r\n                        \r\n                          <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"title\"\r\n                            label=\"ชื่อเหตุการณ์\"\r\n                            fullWidth\r\n                            variant=\"standard\"\r\n                            onChange={e => {items[items.indexOf(item)].name = e.target.value}}\r\n                          /> \r\n                          <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"title\"\r\n                            label=\"เวลา(ไม่บังคับ)\"\r\n                            fullWidth\r\n                            variant=\"standard\"\r\n                            type=\"datetime-local\"\r\n                            onChange={e => {items[items.indexOf(item)].date = e.target.value}}\r\n                          />\r\n                          <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"title\"\r\n                            label=\"เหตุการณ์\"\r\n                            fullWidth\r\n                            variant=\"standard\"\r\n                            onChange={e => {items[items.indexOf(item)].event = e.target.value}}\r\n                          />\r\n                          <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"title\"\r\n                            label=\"ตัวละคร\"\r\n                            fullWidth\r\n                            variant=\"standard\"\r\n                            onChange={e => {items[items.indexOf(item)].character = e.target.value}}\r\n                          />\r\n                          <Button \r\n                            variant=\"contained\" \r\n                            endIcon={<CheckIcon/>} \r\n                            type=\"submit\" \r\n                            color=\"success\"\r\n                            disabled={submitting}\r\n                          >\r\n                            บันทึกข้อมูล\r\n                          </Button>\r\n                          <Button \r\n                            variant=\"contained\" \r\n                            endIcon={<ClearIcon/>} \r\n                            type=\"submit\" \r\n                            color=\"error\">\r\n                            ลบ\r\n                          </Button>\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n            \r\n          </Droppable>\r\n        </DragDropContext>\r\n\r\n      <Stack spacing={10}>\r\n        <Fab \r\n          color=\"primary\" \r\n          style={floatingMenuButtonStyle}  \r\n          aria-label=\"add\" \r\n          onClick={handleClickOpen}\r\n          sx={{ }}>\r\n          <AddIcon />\r\n        </Fab>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle>เพิ่มเหตุการณ์</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              label=\"ชื่อเหตุการณ์\"\r\n              fullWidth\r\n              variant=\"standard\"\r\n            /> \r\n            <TextField\r\n              id=\"datetime-local\"\r\n              sx={{ mt: 4 }}\r\n              label=\"วันที่และเวลา(ไม่บังคับ)\"\r\n              type=\"datetime-local\"\r\n              fullWidth\r\n              defaultValue=\"2017-05-24T10:30\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"event\"\r\n              label=\"เหตุการณ์\"\r\n              fullWidth\r\n              variant=\"standard\"\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"character\"\r\n              label=\"แท็กตัวละคร\"\r\n              fullWidth\r\n              variant=\"standard\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose}>ยกเลิก</Button>\r\n            <Button onClick={addEvent}>บันทึก</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        </Stack>\r\n      </Box>\r\n      \r\n      <Box sx={{ pb: 7 }} >\r\n        <CssBaseline />\r\n        <Paper sx={{ position: 'fixed', bottom: 55, left: 0, right: 0 }} elevation={3}>\r\n          <BottomNavigation\r\n            value={value} onChange={handleChange} showLabels={true}\r\n          >\r\n            <BottomNavigationAction label=\"เรียกดูไทม์ไลน์อื่น\" value='/addtimeline' icon={<AddchartIcon/>} />\r\n          \r\n            <BottomNavigationAction label=\"เรียกดูแผนผัง\" value='/addmap' icon={<DeviceHubIcon />} />\r\n            <BottomNavigationAction label=\"บันทึก\" value='/saveicon' icon={<SaveIcon />} onClick={addTimeline}/>\r\n            \r\n          </BottomNavigation>\r\n        </Paper>\r\n      </Box>\r\n    </div>\r\n    \r\n  );\r\n  \r\n}\r\n","import React from \"react\";\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from 'react-apollo';\r\nimport NewTimeline from \"./NewTimeline\";\r\nimport { polyfill } from \"mobile-drag-drop\";\r\nimport { createMuiTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Header from '../../components/Header';\r\nimport BottomNav from '../../components/BottomNav';\r\nrequire(\"dotenv\").config();\r\n\r\npolyfill();\r\nwindow.addEventListener(\"touchmove\", function () {});\r\n\r\nconst client = new ApolloClient({\r\n  uri:process.env.SERVER_URI\r\n});\r\n\r\nconst mdTheme = createMuiTheme({\r\n  palette: {\r\n  primary: {\r\n     main: \"#967969\" // This is an orange looking color\r\n            },\r\n  secondary: {\r\n     main: \"#F2D2BD\" //Another orange-ish color\r\n             }\r\n        },\r\n\r\n});\r\n\r\nfunction EditTimeline(){\r\n    return(\r\n    <ApolloProvider client={client}>\r\n      <ThemeProvider theme={mdTheme}>\r\n      <Header/>\r\n      \r\n      <NewTimeline/>\r\n\r\n      <BottomNav/>\r\n\r\n      </ThemeProvider>\r\n      \r\n    </ApolloProvider>\r\n    )\r\n};\r\n\r\nexport default  EditTimeline;","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { Card, Button, Typography } from \"@material-ui/core\";\r\nimport Draggable from 'react-draggable';\r\nimport BottomNav from '../../components/BottomNav';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Box } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport BoltIcon from '@mui/icons-material/Bolt';\r\nimport Header from '../../components/Header';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport { createMuiTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport Paper from '@mui/material/Paper';\r\nimport CoPresentIcon from '@mui/icons-material/CoPresent';\r\nimport Crop54Icon from '@mui/icons-material/Crop54';\r\nimport EmojiEmotionsIcon from '@mui/icons-material/EmojiEmotions';\r\nimport TextFieldsIcon from '@mui/icons-material/TextFields';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport { useClient } from '../../client';\r\nimport { CREATE_MAP_MUTATION } from \"../../graphql/mutations\";\r\n\r\n\r\nimport { PhotoshopPicker } from \"react-color\";\r\n\r\nconst mdTheme = createMuiTheme({\r\n  palette: {\r\n  primary: {\r\n     main: \"#967969\" // This is an orange looking color\r\n            },\r\n  secondary: {\r\n     main: \"#F2D2BD\" //Another orange-ish color\r\n             }\r\n        },\r\n\r\n});\r\nexport default function EditMap() {\r\n\r\n//dropdrop names\r\nconst [charName, setCharName] = React.useState('');\r\n\r\nconst handleChangeName = (event) => {\r\n  setCharName(event.target.value);\r\n};\r\n\r\n  const pathname = window.location.pathname; // in case user visits the path directly. The BottomNavBar is able to follow suit.\r\n    const [value, setValue] = React.useState(pathname);\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n\r\n  const [inputListSq, setInputListSq] = useState([]); //create Square\r\n\r\n  const onAddBtnClickSq = (event) => {\r\n    setInputListSq(inputListSq.concat(<DraggableCardSquare key={inputListSq.length} bgColor={colorTB} />));\r\n    setOpenInputText(false);\r\n\r\n  };\r\n\r\n  const [inputListChar, setInputListChar] = useState([]); //create char\r\n\r\n  const onAddBtnClickChar = (event) => {\r\n    setInputListChar(inputListChar.concat(<DraggableCardPerson key={inputListChar.length} bgColor={colorGG} text={charName}  />));\r\n    setOpenCrateChar(false);\r\n\r\n  };\r\n\r\n  const [inputListRel, setInputListRel] = useState([]); //create relation good\r\n\r\n  const onAddBtnClickRel = (event) => {\r\n    setInputListRel(inputListRel.concat(<DraggableCardEgood key={inputListRel.length} />));\r\n    setOpenCrateEmo(false);\r\n\r\n  };\r\n\r\n  const [inputListRelB, setInputListRelB] = useState([]); //create relation bad\r\n\r\n  const onAddBtnClickRelB = (event) => {\r\n    setInputListRelB(inputListRelB.concat(<DraggableCardEbad key={inputListRelB.length} />));\r\n    setOpenCrateEmo(false);\r\n\r\n  };\r\n\r\n  const [inputListTf, setInputListTf] = useState([]); //create textfeild\r\n\r\n  const onAddBtnClickTf = (event) => {\r\n    setInputListTf(inputListTf.concat(<DraggableCardTest key={inputListTf.length} />));\r\n  };\r\n\r\n \r\n  const [openColorPick, setOpenColorPick] = useState(false);\r\n  const [openInputText, setOpenInputText] = useState(false);\r\n  const [openCrateChar, setOpenCrateChar] = useState(false);\r\n  const [openCrateEmo, setOpenCrateEmo] = useState(false);\r\n\r\n\r\n\r\n  // const handleClickOpenColorPick = () => {\r\n  //   setOpenColorPick(true);\r\n  // };\r\n\r\n  const handleClickOpenCrateChar = () => {\r\n    setOpenCrateChar(true);\r\n  };\r\n\r\n\r\n  const handleClickOpenInputText = () => {\r\n    setOpenInputText(true);\r\n  };\r\n\r\n  \r\n  const handleClickOpenEmo = () => {\r\n    setOpenCrateEmo(true);\r\n  };\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpenColorPick(false);\r\n    setOpenInputText(false);\r\n    setOpenCrateChar(false);\r\n    setOpenCrateEmo(false);\r\n\r\n\r\n  };\r\n  \r\n\r\n  const [colorGG, setColorGG] = useState(\"#D05454\"); //color\r\n  const [colorTB, setColorTB] = useState(\"#D05454\"); //color\r\n\r\n\r\n  const DraggableCard = ({ text, bgColor }) => {\r\n    return (\r\n      <Draggable>\r\n        <Card\r\n          style={{ width: \"0px\", backgroundColor: bgColor, color: \"#ffffff\" }}\r\n        >\r\n          <Button variant=\"text\">BUY</Button>\r\n          <Typography variant=\"h6\">{text}</Typography>\r\n        </Card>\r\n      </Draggable>\r\n    );\r\n  };\r\n\r\n  const DraggableCardPerson = ({ text, bgColor }) => {\r\n    return (\r\n      <Draggable>\r\n        <Card\r\n          style={{ width: \"150px\",height:\"65px\", backgroundColor: bgColor, color: \"#ffffff\" }}\r\n          \r\n        >\r\n           <Button label=\"ตัวละคร\"  color=\"primary\" aria-label=\"add\" style={{ width: \"100px\", height:\"65px\", backgroundColor: bgColor, color: \"#ffffff\" }} >\r\n          <PersonIcon />\r\n          <Typography variant=\"h6\">{text}</Typography>\r\n        </Button>\r\n  \r\n        </Card>\r\n      </Draggable>\r\n\r\n      \r\n    );\r\n  };\r\n  \r\n  const DraggableCardSquare = ({ text, bgColor }) => {\r\n    return (\r\n      <Draggable>\r\n       \r\n        <Card\r\n          style={{ width: \"200px\", backgroundColor: bgColor, color: \"#ffffff\" }}\r\n        >\r\n           <TextField id=\"textsquare\" variant=\"outlined\" multiline rows={5} />\r\n        </Card>\r\n        \r\n      </Draggable>\r\n    );\r\n  };\r\n  \r\n  // const DraggableCardCircle = ({ text, bgColor }) => {\r\n  //   return (\r\n  //     <Draggable>\r\n  //       <Card\r\n  //         style={{ width: \"10%\", backgroundColor: bgColor, color: \"#ffffff\" }}\r\n  //       >\r\n  //         <Button variant=\"text\">BUY</Button>\r\n  //         <Typography variant=\"h6\">{text}</Typography>\r\n  //       </Card>\r\n  //     </Draggable>\r\n  //   );\r\n  // };\r\n  \r\n  // const DraggableCardTriangle = ({ text, bgColor }) => {\r\n  //   return (\r\n  //     <Draggable>\r\n  //       <Card\r\n  //         style={{ width: \"40%\", backgroundColor: bgColor, color: \"#ffffff\" }}\r\n  //       >\r\n  //         <Button variant=\"text\">BUY</Button>\r\n  //         <Typography variant=\"h6\">{text}</Typography>\r\n  //       </Card>\r\n  //     </Draggable>\r\n  //   );\r\n  // };\r\n  \r\n  const DraggableCardEgood = ({ text, bgColor }) => {\r\n    return (\r\n      <Draggable>\r\n      <Card\r\n        style={{ width: \"65px\", height:\"65px\", backgroundColor:\"#F75BCA\", color: \"#ffffff\" }}\r\n      >\r\n        <Button color=\"primary\" aria-label=\"add\" style={{ width: \"65px\", height:\"65px\", backgroundColor: bgColor, color: \"#ffffff\" }} >\r\n        <FavoriteIcon />\r\n      </Button>\r\n  \r\n      </Card>\r\n    </Draggable>\r\n    );\r\n  };\r\n  \r\n  const DraggableCardEbad = ({ text, bgColor }) => {\r\n    return (\r\n      <Draggable>\r\n     \r\n      <Card\r\n        style={{ width: \"65px\", height:\"65px\", backgroundColor: \"#1F1F1F\", color: \"#ffffff\" }}\r\n      >\r\n         <Button color=\"primary\" aria-label=\"add\" style={{ width: \"65px\", height:\"65px\", backgroundColor: bgColor, color: \"#ffffff\" }} >\r\n        <BoltIcon />\r\n      </Button>\r\n  \r\n      </Card>\r\n      \r\n    </Draggable>\r\n    );\r\n  };\r\n  \r\n  const DraggableCardTest = ({ text, bgColor }) => {\r\n    return (\r\n      <Draggable>\r\n       \r\n        <Box\r\n          style={{ width: \"200px\", backgroundColor: bgColor, color: \"#ffffff\" }}\r\n        >\r\n           <TextField id=\"textsquare\" label=\"ข้อความ..\" variant=\"outlined\" multiline maxRows={5}/>\r\n        </Box>\r\n        \r\n      </Draggable>\r\n    );\r\n  };\r\n\r\n  const client = useClient();\r\n  const [mapName, setMapName] = useState(\"\");\r\n  const [mapCharcters, setMapCharcters] = useState(\"\");\r\n\r\n  const createMap = async(e) => {\r\n    e.preventDefault();\r\n    const projectId = localStorage.getItem(\"projectId\");\r\n    const variables = {projectId, name: mapName, characters: mapCharcters}\r\n    const mapCreated = await client.request(CREATE_MAP_MUTATION, variables)\r\n    if(mapCreated){\r\n      console.log(mapCreated)\r\n    }else{\r\n      console.log('error creating map')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={mdTheme}>\r\n        <Header/>\r\n        \r\n      <Box\r\n      sx={{\r\n        '& .MuiTextField-root': { m: 1 },\r\n      }}>\r\n      <TextField\r\n        id=\"outlined-uncontrolled\"\r\n        label=\"ชื่อแผนผัง\"\r\n        //value={title || ''}\r\n        multiline={false}\r\n        variant=\"standard\"\r\n        fullWidth\r\n        sx={{ mt: 1 }}\r\n        //justifyContent=\"center\"\r\n        //align=\"center\"\r\n        onChange={e => setMapName(e.target.value)}\r\n      />\r\n      <TextField\r\n        id=\"outlined-uncontrolled\"\r\n        label=\"ตัวละคร\"\r\n        //value={title || ''}\r\n        multiline={false}\r\n        variant=\"standard\"\r\n        fullWidth\r\n        sx={{ mt: 1 }}\r\n        //justifyContent=\"center\"\r\n        //align=\"center\"\r\n        onChange={e => setMapCharcters(e.target.value)}\r\n      />\r\n\r\n      </Box>\r\n\r\n      <Dialog open={openCrateChar}  onClose={handleClose}>\r\n        <DialogTitle>เพิ่มตัวละคร</DialogTitle>\r\n        <FormControl fullWidth>\r\n        <InputLabel id=\"demo-simple-select-label\">เลือกชื่อตัวละคร</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={charName}\r\n          label=\"CharacterName\"\r\n          onChange={handleChangeName }\r\n        >\r\n          <MenuItem value={\"ซาร่า\"}>ซาร่า</MenuItem>\r\n          <MenuItem value={\"ปีเตอร์\"}>ปีเตอร์</MenuItem>\r\n          <MenuItem value={\"เดวิด\"}>เดวิด</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n        <DialogContent>\r\n        \r\n        <PhotoshopPicker\r\n        color={colorGG}\r\n        onChange={colorGG => {\r\n          setColorGG(colorGG.hex);\r\n        }}\r\n      />\r\n \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>ยกเลิก</Button>\r\n          <Button onClick={onAddBtnClickChar}>สร้าง</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n\r\n      <Dialog open={openCrateEmo}  onClose={handleClose}>\r\n        <DialogTitle>เพิ่มความสัมพันธ์</DialogTitle>\r\n        <DialogContent>\r\n        <Button startIcon={<FavoriteIcon />} onClick={onAddBtnClickRel}>รัก</Button>\r\n        <Button startIcon={<BoltIcon />} onClick={onAddBtnClickRelB}>เกลียด</Button>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>ยกเลิก</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n\r\n      <Dialog open={openInputText}  onClose={handleClose}>\r\n        <DialogTitle>เพิ่มกล่องข้อความสี</DialogTitle>\r\n        <DialogContent>\r\n        \r\n        <PhotoshopPicker\r\n        color={colorTB}\r\n        onChange={colorTB => {\r\n          setColorTB(colorTB.hex);\r\n        }}\r\n      />\r\n \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>ยกเลิก</Button>\r\n          <Button onClick={onAddBtnClickSq}>สร้าง</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n\r\n\r\n\r\n      <Dialog open={openColorPick} onClose={handleClose}>\r\n        <DialogTitle>สี</DialogTitle>\r\n        <DialogContent>\r\n        <PhotoshopPicker\r\n        color={colorGG}\r\n        onChange={colorGG => {\r\n          setColorGG(colorGG.hex);\r\n        }}\r\n      />\r\n \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>ยกเลิก</Button>\r\n          <Button onClick={handleClose}>บันทึก</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n          <DraggableCard />\r\n          \r\n          {inputListSq}\r\n          {inputListChar}\r\n          {inputListRel}\r\n          {inputListTf}\r\n          {inputListRelB}\r\n\r\n\r\n          <Box sx={{ pb: 7 }} >\r\n      <CssBaseline />\r\n      <Paper sx={{ position: 'fixed', bottom: 55, left: 0, right: 0 }} elevation={3}>\r\n        <BottomNavigation\r\n          value={value} onChange={handleChange} showLabels={true}\r\n        >\r\n          <BottomNavigationAction onClick={handleClickOpenCrateChar} label=\"ตัวละคร\" value='/person' icon={<CoPresentIcon/>} />\r\n          <BottomNavigationAction onClick={handleClickOpenInputText} label=\"สี่เหลี่ยม\" value='/square' icon={<Crop54Icon />} />\r\n          <BottomNavigationAction onClick={handleClickOpenEmo} label=\"ความสัมพันธ์\" value='/emotion' icon={<EmojiEmotionsIcon />} />\r\n          <BottomNavigationAction onClick={onAddBtnClickTf} label=\"ข้อความ\" value='/text' icon={<TextFieldsIcon />} />\r\n          <BottomNavigationAction label=\"บันทึก\" value='/saveicon' icon={<SaveIcon />} onClick={(e) => createMap(e)}/>\r\n          \r\n        </BottomNavigation>\r\n      </Paper>\r\n    </Box>\r\n\r\n\r\n\r\n\r\n\r\n      <BottomNav/>\r\n      \r\n      \r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n/**\r\n * Material-UI Card that you can drag and drop anywhere.\r\n */\r\n// const DraggableCard = ({ text, bgColor }) => {\r\n//   return (\r\n//     <Draggable>\r\n//       <Card\r\n//         style={{ width: \"0px\", backgroundColor: bgColor, color: \"#ffffff\" }}\r\n//       >\r\n//         <Button variant=\"text\">BUY</Button>\r\n//         <Typography variant=\"h6\">{text}</Typography>\r\n//       </Card>\r\n//     </Draggable>\r\n//   );\r\n// };\r\n\r\n// const DraggableCardPerson = ({ text, bgColor }) => {\r\n//   return (\r\n//     <Draggable>\r\n//       <Card\r\n//         style={{ width: \"px\",height:\"px\", backgroundColor: bgColor, color: \"#ffffff\" }}\r\n        \r\n//       >\r\n//          <Button color=\"primary\" aria-label=\"add\" style={{ width: \"65px\", height:\"65px\", backgroundColor: bgColor, color: \"#ffffff\" }} >\r\n//         <PersonIcon />\r\n//       </Button>\r\n\r\n//       </Card>\r\n//     </Draggable>\r\n//   );\r\n// };\r\n\r\n// const DraggableCardSquare = ({ text, bgColor }) => {\r\n//   return (\r\n//     <Draggable>\r\n     \r\n//       <Card\r\n//         style={{ width: \"200px\", backgroundColor: bgColor, color: \"#ffffff\" }}\r\n//       >\r\n//          <TextField id=\"textsquare\" variant=\"outlined\" multiline rows={5} />\r\n//       </Card>\r\n      \r\n//     </Draggable>\r\n//   );\r\n// };\r\n\r\n// const DraggableCardCircle = ({ text, bgColor }) => {\r\n//   return (\r\n//     <Draggable>\r\n//       <Card\r\n//         style={{ width: \"10%\", backgroundColor: bgColor, color: \"#ffffff\" }}\r\n//       >\r\n//         <Button variant=\"text\">BUY</Button>\r\n//         <Typography variant=\"h6\">{text}</Typography>\r\n//       </Card>\r\n//     </Draggable>\r\n//   );\r\n// };\r\n\r\n// const DraggableCardTriangle = ({ text, bgColor }) => {\r\n//   return (\r\n//     <Draggable>\r\n//       <Card\r\n//         style={{ width: \"40%\", backgroundColor: bgColor, color: \"#ffffff\" }}\r\n//       >\r\n//         <Button variant=\"text\">BUY</Button>\r\n//         <Typography variant=\"h6\">{text}</Typography>\r\n//       </Card>\r\n//     </Draggable>\r\n//   );\r\n// };\r\n\r\n// const DraggableCardEgood = ({ text, bgColor }) => {\r\n//   return (\r\n//     <Draggable>\r\n//     <Card\r\n//       style={{ width: \"65px\", height:\"65px\", backgroundColor: bgColor, color: \"#ffffff\" }}\r\n//     >\r\n//       <Button color=\"primary\" aria-label=\"add\" style={{ width: \"65px\", height:\"65px\", backgroundColor: bgColor, color: \"#ffffff\" }} >\r\n//       <FavoriteIcon />\r\n//     </Button>\r\n\r\n//     </Card>\r\n//   </Draggable>\r\n//   );\r\n// };\r\n\r\n// const DraggableCardEbad = ({ text, bgColor }) => {\r\n//   return (\r\n//     <Draggable>\r\n   \r\n//     <Card\r\n//       style={{ width: \"65px\", height:\"65px\", backgroundColor: bgColor, color: \"#ffffff\" }}\r\n//     >\r\n//        <Button color=\"primary\" aria-label=\"add\" style={{ width: \"65px\", height:\"65px\", backgroundColor: bgColor, color: \"#ffffff\" }} >\r\n//       <BoltIcon />\r\n//     </Button>\r\n\r\n//     </Card>\r\n    \r\n//   </Draggable>\r\n//   );\r\n// };\r\n\r\n// const DraggableCardTest = ({ text, bgColor }) => {\r\n//   return (\r\n//     <Draggable>\r\n     \r\n//       <Card\r\n//         style={{ width: \"200px\", backgroundColor: bgColor, color: \"#ffffff\" }}\r\n//       >\r\n//          <TextField id=\"textsquare\" label=\"ข้อความ..\"  variant=\"outlined\" multiline maxRows={5}/>\r\n//       </Card>\r\n      \r\n//     </Draggable>\r\n//   );\r\n// };\r\n\r\n\r\n\r\n/**\r\n * Material-UI Button in a Card. You can drag and drop the button\r\n * anywhere within the card.\r\n */\r\n// const DraggableButtonInCard = ({ text, bgColor }) => {\r\n//   return (\r\n//     <Card style={{ width: \"40%\", backgroundColor: bgColor, color: \"#ffffff\" }}>\r\n//       <Draggable>\r\n//         <Button variant=\"text\">BUY</Button>\r\n//       </Draggable>\r\n//       <Typography variant=\"h6\">{text}</Typography>\r\n//     </Card>\r\n//   );\r\n// };\r\n\r\n\r\n//<Box sx={{ display: 'flex', justifyContent: 'center', }}>","import React from 'react';\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport axios from 'axios';\r\n\r\nconst __ISMSIE__ = navigator.userAgent.match(/Trident/i) ? true : false;\r\n\r\nconst QuillClipboard = Quill.import('modules/clipboard');\r\n\r\nclass Clipboard extends QuillClipboard {\r\n\r\n    getMetaTagElements = (stringContent) => {\r\n        const el = document.createElement('div');\r\n        el.innerHTML = stringContent;\r\n        return el.getElementsByTagName('meta');\r\n    };\r\n\r\n    async onPaste(e) {\r\n        let clipboardData = e.clipboardData || window.clipboardData;\r\n        let pastedData = await clipboardData.getData('Text');\r\n\r\n        const urlMatches = pastedData.match(/\\b(http|https)?:\\/\\/\\S+/gi) || [];\r\n        if (urlMatches.length > 0) {\r\n            e.preventDefault();\r\n            urlMatches.forEach(link => {\r\n                axios.get(link)\r\n                    .then(payload => {\r\n                        // let title, image, url, description;\r\n                        let title, image, url;\r\n                        for (let node of this.getMetaTagElements(payload)) {\r\n                            if (node.getAttribute(\"property\") === \"og:title\") {\r\n                                title = node.getAttribute(\"content\");\r\n                            }\r\n                            if (node.getAttribute(\"property\") === \"og:image\") {\r\n                                image = node.getAttribute(\"content\");\r\n                            }\r\n                            if (node.getAttribute(\"property\") === \"og:url\") {\r\n                                url = node.getAttribute(\"content\");\r\n                            }\r\n                            // if (node.getAttribute(\"property\") === \"og:description\") {\r\n                            //     description = node.getAttribute(\"content\");\r\n                            // }\r\n                        }\r\n\r\n                        const rendered = `<a href=${url} target=\"_blank\"><div><img src=${image} alt=${title} width=\"20%\"/><span>${title}</span></div></a>`;\r\n\r\n                        let range = this.quill.getSelection();\r\n                        let position = range ? range.index : 0;\r\n                        this.quill.pasteHTML(position, rendered, 'silent');\r\n                        this.quill.setSelection(position + rendered.length);\r\n                    })\r\n                    .catch(error => console.error(error));\r\n            });\r\n\r\n        } else {\r\n            //console.log('when to use this') 보통 다른 곳에서  paste 한다음에  copy하면 이쪽 걸로 한다. \r\n            super.onPaste(e);\r\n        }\r\n    }\r\n\r\n}\r\nQuill.register('modules/clipboard', Clipboard, true);\r\n\r\nconst BlockEmbed = Quill.import('blots/block/embed');\r\n\r\nclass ImageBlot extends BlockEmbed {\r\n\r\n    static create(value) {\r\n        const imgTag = super.create();\r\n        imgTag.setAttribute('src', value.src);\r\n        imgTag.setAttribute('alt', value.alt);\r\n        imgTag.setAttribute('width', '100%');\r\n        return imgTag;\r\n    }\r\n\r\n    static value(node) {\r\n        return { src: node.getAttribute('src'), alt: node.getAttribute('alt') };\r\n    }\r\n\r\n}\r\n\r\nImageBlot.blotName = 'image';\r\nImageBlot.tagName = 'img';\r\nQuill.register(ImageBlot);\r\n\r\nclass VideoBlot extends BlockEmbed {\r\n\r\n    static create(value) {\r\n        if (value && value.src) {\r\n            const videoTag = super.create();\r\n            videoTag.setAttribute('src', value.src);\r\n            videoTag.setAttribute('title', value.title);\r\n            videoTag.setAttribute('width', '100%');\r\n            videoTag.setAttribute('controls', '');\r\n\r\n            return videoTag;\r\n        } else {\r\n            const iframeTag = document.createElement('iframe');\r\n            iframeTag.setAttribute('src', value);\r\n            iframeTag.setAttribute('frameborder', '0');\r\n            iframeTag.setAttribute('allowfullscreen', true);\r\n            iframeTag.setAttribute('width', '100%');\r\n            return iframeTag;\r\n        }\r\n    }\r\n\r\n    static value(node) {\r\n        if (node.getAttribute('title')) {\r\n            return { src: node.getAttribute('src'), alt: node.getAttribute('title') };\r\n        } else {\r\n            return node.getAttribute('src');\r\n        }\r\n        // return { src: node.getAttribute('src'), alt: node.getAttribute('title') };\r\n    }\r\n\r\n}\r\n\r\nVideoBlot.blotName = 'video';\r\nVideoBlot.tagName = 'video';\r\nQuill.register(VideoBlot);\r\n\r\nclass FileBlot extends BlockEmbed {\r\n\r\n    static create(value) {\r\n        const prefixTag = document.createElement('span');\r\n        prefixTag.innerText = \"첨부파일 - \";\r\n\r\n        const bTag = document.createElement('b');\r\n        //위에 첨부파일 글자 옆에  파일 이름이 b 태그를 사용해서 나온다.\r\n        bTag.innerText = value;\r\n\r\n        const linkTag = document.createElement('a');\r\n        linkTag.setAttribute('href', value);\r\n        linkTag.setAttribute(\"target\", \"_blank\");\r\n        linkTag.setAttribute(\"className\", \"file-link-inner-post\");\r\n        linkTag.appendChild(bTag);\r\n        //linkTag 이런식으로 나온다 <a href=\"btn_editPic@3x.png\" target=\"_blank\" classname=\"file-link-inner-post\"><b>btn_editPic@3x.png</b></a>\r\n\r\n        const node = super.create();\r\n        node.appendChild(prefixTag);\r\n        node.appendChild(linkTag);\r\n\r\n        return node;\r\n    }\r\n\r\n    static value(node) {\r\n        const linkTag = node.querySelector('a');\r\n        return linkTag.getAttribute('href');\r\n    }\r\n\r\n}\r\n\r\nFileBlot.blotName = 'file';\r\nFileBlot.tagName = 'p';\r\nFileBlot.className = 'file-inner-post';\r\nQuill.register(FileBlot);\r\n\r\nclass PollBlot extends BlockEmbed {\r\n\r\n    static create(value) {\r\n        const prefixTag = document.createElement('span');\r\n        prefixTag.innerText = \"투표 - \";\r\n\r\n        const bTag = document.createElement('b');\r\n        bTag.innerText = value.title;\r\n\r\n        const node = super.create();\r\n        node.setAttribute('id', value.id);\r\n        node.appendChild(prefixTag);\r\n        node.appendChild(bTag);\r\n\r\n        return node;\r\n    }\r\n\r\n    static value(node) {\r\n        const id = node.getAttribute('id');\r\n        const bTag = node.querySelector('b');\r\n        const title = bTag.innerText;\r\n        return { id, title };\r\n    }\r\n\r\n}\r\n\r\nPollBlot.blotName = 'poll';\r\nPollBlot.tagName = 'p';\r\nPollBlot.className = 'poll-inner-post';\r\nQuill.register(PollBlot);\r\n\r\nclass QuillEditor extends React.Component {\r\n\r\n    bandId;\r\n    placeholder;\r\n    onEditorChange;\r\n    onFilesChange;\r\n    onPollsChange;\r\n    _isMounted;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editorHtml: __ISMSIE__ ? \"<p>&nbsp;</p>\" : \"\",\r\n            files: [],\r\n        };\r\n\r\n        this.reactQuillRef = null;\r\n\r\n        this.inputOpenImageRef = React.createRef();\r\n        this.inputOpenVideoRef = React.createRef();\r\n        this.inputOpenFileRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    handleChange = (html) => {\r\n        console.log('html', html)\r\n        // https://youtu.be/BbR-QCoKngE\r\n        // https://www.youtube.com/embed/ZwKhufmMxko\r\n        // https://tv.naver.com/v/9176888\r\n        // renderToStaticMarkup(ReactHtmlParser(html, options));\r\n\r\n        this.setState({\r\n            editorHtml: html\r\n        }, () => {\r\n            this.props.onEditorChange(this.state.editorHtml);\r\n        });\r\n    };\r\n\r\n    // I V F P들을  눌렀을떄 insertImage: this.imageHandler로 가서  거기서 inputOpenImageRef를 클릭 시킨다. \r\n    imageHandler = () => {\r\n        this.inputOpenImageRef.current.click();\r\n    };\r\n\r\n    videoHandler = () => {\r\n        this.inputOpenVideoRef.current.click();\r\n    };\r\n\r\n    fileHandler = () => {\r\n        this.inputOpenFileRef.current.click();\r\n    };\r\n\r\n\r\n    insertImage = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\r\n            const file = e.currentTarget.files[0];\r\n\r\n            let formData = new FormData();\r\n            const config = {\r\n                header: { 'content-type': 'multipart/form-data' }\r\n            }\r\n            formData.append(\"file\", file);\r\n\r\n            axios.post('/api/blog/uploadfiles', formData, config)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        const quill = this.reactQuillRef.getEditor();\r\n                        quill.focus();\r\n\r\n                        let range = quill.getSelection();\r\n                        let position = range ? range.index : 0;\r\n\r\n                        //먼저 노드 서버에다가 이미지를 넣은 다음에   여기 아래에 src에다가 그걸 넣으면 그게 \r\n                        //이미지 블롯으로 가서  크리에이트가 이미지를 형성 하며 그걸 발류에서     src 랑 alt 를 가져간후에  editorHTML에 다가 넣는다.\r\n                        quill.insertEmbed(position, \"image\", { src: \"http://localhost:5000/\" + response.data.url, alt: response.data.fileName });\r\n                        quill.setSelection(position + 1);\r\n\r\n                        if (this._isMounted) {\r\n                            this.setState({\r\n                                files: [...this.state.files, file]\r\n                            }, () => { this.props.onFilesChange(this.state.files) });\r\n                        }\r\n                    } else {\r\n                        return alert('failed to upload file')\r\n                    }\r\n                })\r\n        }\r\n    };\r\n\r\n    insertVideo = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\r\n            const file = e.currentTarget.files[0];\r\n\r\n            let formData = new FormData();\r\n            const config = {\r\n                header: { 'content-type': 'multipart/form-data' }\r\n            }\r\n            formData.append(\"file\", file);\r\n\r\n            axios.post('/api/blog/uploadfiles', formData, config)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        const quill = this.reactQuillRef.getEditor();\r\n                        quill.focus();\r\n\r\n                        let range = quill.getSelection();\r\n                        let position = range ? range.index : 0;\r\n                        quill.insertEmbed(position, \"video\", { src: \"http://localhost:5000/\" + response.data.url, title: response.data.fileName });\r\n                        quill.setSelection(position + 1);\r\n\r\n                        if (this._isMounted) {\r\n                            this.setState({\r\n                                files: [...this.state.files, file]\r\n                            }, () => { this.props.onFilesChange(this.state.files) });\r\n                        }\r\n                    } else {\r\n                        return alert('failed to upload file')\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    insertFile = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\r\n            const file = e.currentTarget.files[0];\r\n            console.log(file);\r\n\r\n            let formData = new FormData();\r\n            const config = {\r\n                header: { 'content-type': 'multipart/form-data' }\r\n            }\r\n            formData.append(\"file\", file);\r\n\r\n            axios.post('/api/blog/uploadfiles', formData, config)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        const quill = this.reactQuillRef.getEditor();\r\n                        quill.focus();\r\n\r\n                        let range = quill.getSelection();\r\n                        let position = range ? range.index : 0;\r\n                        quill.insertEmbed(position, \"file\", response.data.fileName);\r\n                        quill.setSelection(position + 1);\r\n\r\n                        if (this._isMounted) {\r\n                            this.setState({\r\n                                files: [...this.state.files, file]\r\n                            }, () => { this.props.onFilesChange(this.state.files) });\r\n                        }\r\n                    };\r\n                })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"toolbar\">\r\n                    <select className=\"ql-header\" defaultValue={\"\"} onChange={e => e.persist()}>\r\n                        <option value=\"1\" />\r\n                        <option value=\"2\" />\r\n                        <option value=\"\" />\r\n                    </select>\r\n                    <button className=\"ql-bold\" />\r\n                    <button className=\"ql-italic\" />\r\n                    <button className=\"ql-underline\" />\r\n                    <button className=\"ql-strike\" />\r\n                    {/* <button className=\"ql-insertImage\">\r\n                        I\r\n                    </button>\r\n                    <button className=\"ql-insertVideo\">\r\n                        V\r\n                    </button>\r\n                    <button className=\"ql-insertFile\">\r\n                        F\r\n                    </button> */}\r\n                    {/* <button className=\"ql-link\" />\r\n                    <button className=\"ql-code-block\" />\r\n                    <button className=\"ql-video\" /> */}\r\n                    <button className=\"ql-blockquote\" />\r\n                    <button className=\"ql-clean\" />\r\n\r\n                    \r\n\r\n                </div>\r\n                <ReactQuill\r\n                    ref={(el) => { this.reactQuillRef = el }}\r\n                    theme={'snow'}\r\n                    onChange={this.handleChange}\r\n                    modules={this.modules}\r\n                    formats={this.formats}\r\n                    value={this.state.editorHtml}\r\n                    placeholder={this.props.placeholder}\r\n                />\r\n                <input type=\"file\" accept=\"image/*\" ref={this.inputOpenImageRef} style={{ display: \"none\" }} onChange={this.insertImage} />\r\n                <input type=\"file\" accept=\"video/*\" ref={this.inputOpenVideoRef} style={{ display: \"none\" }} onChange={this.insertVideo} />\r\n                <input type=\"file\" accept=\"*\" ref={this.inputOpenFileRef} style={{ display: \"none\" }} onChange={this.insertFile} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    modules = {\r\n        //syntax: true,\r\n        toolbar: {\r\n            container: \"#toolbar\",\r\n            //id =\"toorbar\"는  그 위에 B I U S I V F P 이거 있는 곳이다. \r\n            handlers: {\r\n                insertImage: this.imageHandler,\r\n                insertVideo: this.videoHandler,\r\n                insertFile: this.fileHandler,\r\n                insertPoll: this.pollHandler,\r\n            }\r\n        },\r\n\r\n    };\r\n\r\n    formats = [\r\n        'header',\r\n        'bold', 'italic', 'underline', 'strike',\r\n        'image', 'video', 'file', 'link',\"code-block\", \"video\", \"blockquote\", \"clean\"\r\n    ];\r\n}\r\n\r\nexport default QuillEditor;","import * as React from 'react';\r\nimport { useState } from \"react\";\r\nimport QuilEditor from './QuilEditor';\r\nimport 'react-quill/dist/quill.snow.css'\r\nimport \"./style.css\";\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport { Grid } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { useClient } from '../../client';\r\nimport { CREATE_CHAPTER_MUTATION } from '../../graphql/mutations';\r\n\r\nexport default function WriteArea() {\r\n\r\n  const client = useClient();\r\n  const [chapterName, setChapterName] = useState(\"\");\r\n  const [chapterOrder, setChapterOrder] = useState(\"\");\r\n  const [characters, setCharacters] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const onEditorChange = (value) => {\r\n    setContent(value);\r\n    console.log(content)\r\n  }\r\n\r\n  const createChapter = async(e) => {\r\n    e.preventDefault();\r\n    const projectId = localStorage.getItem(\"projectId\");\r\n    const orderInt = parseInt(chapterOrder);\r\n    const variables = {projectId, name: chapterName, characters, order: orderInt, content}\r\n    const chapterCreated = await client.request(CREATE_CHAPTER_MUTATION, variables)\r\n    if(chapterCreated){\r\n      console.log(chapterCreated)\r\n    }else{\r\n      console.log('error creating chapter')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div href=\"node_modules/react-quill/dist/quill.snow.css\">\r\n      <Box>\r\n      <TextField\r\n        id=\"outlined-uncontrolled\"\r\n        label=\"ชื่อตอน\"\r\n        multiline={false}\r\n        variant=\"standard\"\r\n        fullWidth\r\n        sx={{ mt: 1 }}\r\n        onChange={e => setChapterName(e.target.value)}\r\n      />\r\n      <TextField\r\n        id=\"outlined-uncontrolled\"\r\n        label=\"ลำดับของตอน\"\r\n        multiline={false}\r\n        variant=\"standard\"\r\n        fullWidth\r\n        sx={{ mt: 1 }}\r\n        onChange={e => setChapterOrder(e.target.value)}\r\n      />\r\n      <TextField\r\n        id=\"outlined-uncontrolled\"\r\n        label=\"ตัวละคร\"\r\n        multiline={false}\r\n        variant=\"standard\"\r\n        fullWidth\r\n        sx={{ mt: 1 }}\r\n        onChange={e => setCharacters(e.target.value)}\r\n      />\r\n      </Box>\r\n      \r\n      <QuilEditor\r\n        placeholder={\"write your story\"}\r\n        onEditorChange={onEditorChange}\r\n      />\r\n      <Grid item xs={12} align=\"center\" sx={{p: 4,}}> \r\n      <Fab variant=\"extended\" size=\"small\" color=\"primary\" aria-label=\"add\" align=\"center\" onClick={(e) => createChapter(e)} >\r\n      บันทึกการแก้ไข\r\n      <CheckIcon />\r\n      </Fab>\r\n      </Grid>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from 'react-apollo';\r\nimport { createMuiTheme, ThemeProvider } from '@mui/material/styles';\r\nimport WriteArea from \"./WriteArea\";\r\nimport Header from '../../components/Header';\r\nimport BottomNav from '../../components/BottomNav';\r\nrequire(\"dotenv\").config();\r\n\r\nconst client = new ApolloClient({\r\n  uri:process.env.SERVER_URI\r\n});\r\n\r\nconst mdTheme = createMuiTheme({\r\n  palette: {\r\n  primary: {\r\n     main: \"#967969\" // This is an orange looking color\r\n            },\r\n  secondary: {\r\n     main: \"#F2D2BD\" //Another orange-ish color\r\n             }\r\n        },\r\n\r\n});\r\n\r\nfunction EditStory(){\r\n    return(\r\n    <ApolloProvider client={client}>\r\n      <ThemeProvider theme={mdTheme}>\r\n      <Header/>\r\n      <WriteArea/>\r\n      <BottomNav/>\r\n      </ThemeProvider>\r\n    </ApolloProvider>\r\n    )\r\n};\r\n\r\nexport default  EditStory;","import * as React from 'react';\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport 'react-quill/dist/quill.snow.css'\r\nimport \"./style.css\";\r\nimport { Box } from \"@mui/system\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { Button } from \"@mui/material\";\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport ConfirmDialog from '../../components/ConfirmDialog'\r\nimport Context from '../../context';\r\nimport { useClient } from '../../client';\r\nimport { SELECTED_PROJECT } from \"../../graphql/queries\";\r\nimport { DELETE_CHAPTER_MUTATION } from '../../graphql/mutations';\r\n\r\nexport default function GetChapterDetail(){\r\n\r\n    const navigate = useNavigate();\r\n    const {state} = useContext(Context);\r\n    const {currentProject} = state;\r\n    const client = useClient();\r\n    const [name, setName] = useState();\r\n    const [order, setOrder] = useState(0);\r\n    const [characters, setCharacters] = useState();\r\n    const [content, setContent] = useState();\r\n    const [confirmDialog, setConfirmDialog ] = useState({isOpen: false, title: '', subTitle: ''})\r\n\r\n    const getChapterDetail = async() => {\r\n        const chapterId = localStorage.getItem(\"chapterId\");\r\n        const projectId = localStorage.getItem(\"projectId\");\r\n        const projectVariable = {_id: projectId}\r\n        const project = await client.request(SELECTED_PROJECT, projectVariable);\r\n        const chapter = await project.selectedProject.chapters.find(e => e._id === chapterId);\r\n        if(chapter){\r\n            console.log(chapter)\r\n            setName(chapter.name)\r\n            setOrder(chapter.order)\r\n            setCharacters(chapter.characters)\r\n            setContent(chapter.content)\r\n        }\r\n    }\r\n\r\n    const deleteChapter = async event => {\r\n        event.preventDefault();\r\n        setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n        })\r\n        const chapterId = localStorage.getItem(\"chapterId\");\r\n        const projectId = currentProject._id\r\n        const variables = {chapterId, projectId}\r\n        const deleteChapter = await client.request(DELETE_CHAPTER_MUTATION, variables)\r\n        if(deleteChapter){\r\n            console.log(deleteChapter)\r\n            navigate('/mystory')\r\n        }else{\r\n            console.log('error deleting timeline')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getChapterDetail();\r\n    }, []);\r\n\r\n    return(\r\n        <div href=\"node_modules/react-quill/dist/quill.snow.css\">\r\n            <Box>\r\n            <TextField\r\n                id=\"outlined-uncontrolled\"\r\n                label=\"ชื่อตอน\"\r\n                multiline={false}\r\n                variant=\"standard\"\r\n                fullWidth\r\n                sx={{ mt: 1 }}\r\n                value={name || ''}\r\n            />\r\n            <TextField\r\n                id=\"outlined-uncontrolled\"\r\n                label=\"ลำดับของตอน\"\r\n                multiline={false}\r\n                variant=\"standard\"\r\n                fullWidth\r\n                sx={{ mt: 1 }}\r\n                value={order || ''}\r\n            />\r\n            <TextField\r\n                id=\"outlined-uncontrolled\"\r\n                label=\"ตัวละคร\"\r\n                multiline={false}\r\n                variant=\"standard\"\r\n                fullWidth\r\n                sx={{ mt: 1 }}\r\n                value={characters || ''}\r\n            />\r\n            </Box>\r\n            <Box>\r\n              <div dangerouslySetInnerHTML={{ __html: content }} />  \r\n            </Box>\r\n            \r\n            <Button\r\n                variant=\"contained\" \r\n                endIcon={<ClearIcon/>}  \r\n                //color=\"error\"\r\n                onClick={() => {\r\n                    setConfirmDialog({\r\n                        isOpen: true,\r\n                        title: 'ต้องการลบตอนนี้หรือไม่',\r\n                        subTitle: '',\r\n                        onConfirm: (e) => {deleteChapter(e)}\r\n                    })\r\n                }} \r\n            >\r\n                ลบตอน\r\n            </Button>\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from 'react-apollo';\r\nimport { createMuiTheme, ThemeProvider } from '@mui/material/styles';\r\nimport GetChapterDetail from './GetChapterDetail';\r\nimport Header from '../../components/Header';\r\nimport BottomNav from '../../components/BottomNav';\r\n\r\nconst client = new ApolloClient({\r\n  uri:'http://localhost:4000/graphql'\r\n});\r\n\r\nconst mdTheme = createMuiTheme({\r\n  palette: {\r\n  primary: {\r\n     main: \"#967969\" // This is an orange looking color\r\n            },\r\n  secondary: {\r\n     main: \"#F2D2BD\" //Another orange-ish color\r\n             }\r\n        },\r\n\r\n});\r\n\r\nfunction ChapterDetail(){\r\n    return(\r\n    <ApolloProvider client={client}>\r\n      <ThemeProvider theme={mdTheme}>\r\n        <Header/>\r\n        <GetChapterDetail/>\r\n        <BottomNav/>\r\n      </ThemeProvider>\r\n    </ApolloProvider>\r\n    )\r\n};\r\n\r\nexport default  ChapterDetail;\r\n","import \"./TimelineA.css\";\r\nimport React from \"react\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { Box } from \"@mui/system\";\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Button } from \"@mui/material\";\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Stack from '@mui/material/Stack';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport Paper from '@mui/material/Paper';\r\nimport AddchartIcon from '@mui/icons-material/Addchart';\r\nimport DeviceHubIcon from '@mui/icons-material/DeviceHub';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport ConfirmDialog from '../../components/ConfirmDialog'\r\nimport Context from '../../context';\r\nimport { useClient } from '../../client';\r\nimport { SELECTED_PROJECT } from '../../graphql/queries';\r\nimport { CREATE_TIMELINE_BOX_MUTATION, UPDATE_TIMELINE_MUTATION, DELETE_TIMELINE_MUTATION} from '../../graphql/mutations';\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"#D2B48C\t\" : \"#f5ebe6\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n  background: isDraggingOver ? \"#483C32\t\" : \"#877e78\",\r\n  padding: grid,\r\n  width: 500\r\n});\r\n\r\n\r\n\r\nexport default function Timeline() {\r\n\r\n  const itemArray = [\r\n    {id: \"item-0\", content: \"content 1\"},\r\n    {id: \"item-1\", content: \"content 2\"},\r\n    {id: \"item-2\", content: \"content 3\"}\r\n  ]\r\n  \r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  //const [value, setValue] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n  const client = useClient();\r\n  const navigate = useNavigate();\r\n  const {state} = useContext(Context);\r\n  const {currentProject} = state;\r\n  const [items, setItems] = useState(itemArray); \r\n  const [timelineName, setTimelineName] = useState(\"\");\r\n  const [characters, setCharacters] = useState(\"\");\r\n  const [boxes, setBoxes] = useState([]);\r\n  const [boxName, setBoxName] = useState(\"\");\r\n  const now = new Date();\r\n  const isoString = now.toISOString().slice(0,10);\r\n  const [boxDate, setBoxDate] = useState(isoString);\r\n  const [boxEvent, setBoxEvent] = useState(\"\");\r\n  const [boxCharacter, setBoxCharacter] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [confirmDialog, setConfirmDialog ] = useState({isOpen: false, title: '', subTitle: ''})\r\n\r\n  const findTimeline = async (e) => {\r\n    const projectId = localStorage.getItem(\"projectId\");\r\n    const projectVariable = {_id: projectId};\r\n    const project = await client.request(SELECTED_PROJECT, projectVariable);\r\n\r\n    const timelineId = localStorage.getItem(\"timelineId\");\r\n    console.log(timelineId);\r\n    const timeline = await project.selectedProject.timelines.find(e => e._id === timelineId);\r\n    console.log(timeline);\r\n    console.log(timeline.box);\r\n    if(timeline){\r\n      setItems(timeline.box);\r\n      setTimelineName(timeline.name);\r\n      setCharacters(timeline.characters);\r\n      setBoxes(timeline.box);\r\n    }\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const pathname = window.location.pathname;\r\n  const [value, setValue] = React.useState(pathname);\r\n \r\n  const floatingMenuButtonStyle = {\r\n    alignSelf: 'flex-end',\r\n    position: 'fixed',\r\n    bottom: '15%',\r\n    right: '10%' \r\n  }\r\n\r\n  const onDragEnd = (result) => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const reorderedItems = reorder(\r\n      items,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    setItems(reorderedItems);\r\n  };\r\n\r\n  const addTimelineฺBox = async(e) => {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n    var i = items.length;\r\n    const index = `item-${i}`;\r\n    setItems([...items, {id: `item-${i}`, content: \"a\"}])\r\n    const projectId = localStorage.getItem(\"projectId\");\r\n    const timelineId = localStorage.getItem(\"timelineId\");\r\n    const variables = {projectId, timelineId, name: boxName, id: index, date: boxDate, event: boxEvent, character: boxCharacter};\r\n    const {createbox} = await client.request(CREATE_TIMELINE_BOX_MUTATION, variables);\r\n    console.log(createbox);\r\n    setOpen(false);\r\n    setSubmitting(false);\r\n    if(submitting === false){\r\n      findTimeline();\r\n      //navigate('/timelinedetails')\r\n    }\r\n  }\r\n\r\n  const createBoxArray = () => {\r\n    var box = [];\r\n    items.forEach(item => {\r\n      var boxItem = {\r\n        id: `item-${items.indexOf(item)}`,\r\n        name: item.name,\r\n        date: item.date,\r\n        event: item.event,\r\n        character: item.character\r\n      }\r\n      box.push(boxItem)\r\n    })\r\n    return box\r\n  }\r\n\r\n  const updateTimeline = async(e) => {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n    const projectId = localStorage.getItem(\"projectId\");\r\n    const timelineId = localStorage.getItem(\"timelineId\");\r\n    const box = createBoxArray();\r\n    console.log(box)\r\n    const updateVariables = {projectId, timelineId, name: timelineName, characters, box};\r\n    const updateTimeline = await client.request( UPDATE_TIMELINE_MUTATION, updateVariables);\r\n    console.log(updateTimeline);\r\n    setSubmitting(false);\r\n    findTimeline();\r\n  }\r\n\r\n  const deleteTimeline = async event => {\r\n    event.preventDefault();\r\n    setConfirmDialog({\r\n      ...confirmDialog,\r\n      isOpen: false\r\n    })\r\n    const timelineId = localStorage.getItem(\"timelineId\");\r\n    const projectId = currentProject._id\r\n    const variables = {timelineId, projectId}\r\n    const deleteTimeline = await client.request(DELETE_TIMELINE_MUTATION, variables)\r\n    if(deleteTimeline){\r\n      console.log(deleteTimeline)\r\n      navigate('/mytimeline')\r\n    }else{\r\n      console.log('error deleting timeline')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    findTimeline();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Box>\r\n        <TextField\r\n          id=\"outlined-uncontrolled\"\r\n          label=\"ชื่อไทม์ไลน์\"\r\n          multiline={false}\r\n          variant=\"standard\"\r\n          fullWidth\r\n          sx={{ mt: 1 }}\r\n          value={timelineName || ''}\r\n        />\r\n        <TextField\r\n          id=\"outlined-uncontrolled\"\r\n          label=\"ตัวละคร\"\r\n          multiline={false}\r\n          variant=\"standard\"\r\n          fullWidth\r\n          sx={{ mt: 1 }}\r\n          value={characters || ''}\r\n        />\r\n      </Box>\r\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId={\"droppable\"}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {items.map((box, idx) => (\r\n                <Draggable key={box.id} draggableId={box.id} index={idx}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                        {/* <h4>{item.id}</h4> */}\r\n                        <TextField\r\n                          autoFocus\r\n                          margin=\"dense\"\r\n                          id=\"title\"\r\n                          label=\"ชื่อเหตุการณ์\"\r\n                          fullWidth\r\n                          variant=\"standard\"\r\n                          value={box.name || ''}\r\n                        /> \r\n                        <TextField\r\n                          autoFocus\r\n                          margin=\"dense\"\r\n                          id=\"title\"\r\n                          label=\"เวลา(ไม่บังคับ)\"\r\n                          fullWidth\r\n                          variant=\"standard\"\r\n                          value={box.date || ''}\r\n                        />\r\n                        <TextField\r\n                          autoFocus\r\n                          margin=\"dense\"\r\n                          id=\"title\"\r\n                          label=\"เหตุการณ์\"\r\n                          fullWidth\r\n                          variant=\"standard\"\r\n                          value={box.event || ''}\r\n                        />\r\n                        <TextField\r\n                          autoFocus\r\n                          margin=\"dense\"\r\n                          id=\"title\"\r\n                          label=\"ตัวละคร\"\r\n                          fullWidth\r\n                          variant=\"standard\"\r\n                          value={box.character || ''}\r\n                        />\r\n                        <Button \r\n                          variant=\"contained\" \r\n                          endIcon={<CheckIcon/>} \r\n                          type=\"submit\" \r\n                          color=\"success\"\r\n                          onClick={e => addTimelineฺBox(e, boxes.indexOf(box))}\r\n                          >\r\n                          บันทึกข้อมูล\r\n                        </Button>\r\n                        <Button \r\n                          variant=\"contained\" \r\n                          endIcon={<ClearIcon/>} \r\n                          type=\"submit\" \r\n                          color=\"error\">\r\n                          ลบ\r\n                        </Button>\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n          \r\n        </Droppable>\r\n      </DragDropContext>\r\n        \r\n     <Stack spacing={10}>\r\n      <Fab \r\n        color=\"primary\" \r\n        style={floatingMenuButtonStyle}  \r\n        aria-label=\"add\" \r\n        onClick={handleClickOpen}\r\n        sx={{ }}>\r\n        <AddIcon />\r\n      </Fab>\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>เพิ่มเหตุการณ์</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"ชื่อเหตุการณ์\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            onChange={e => setBoxName(e.target.value)}\r\n          /> \r\n           <TextField\r\n            id=\"datetime-local\"\r\n            sx={{ mt: 4 }}\r\n            label=\"วันที่และเวลา(ไม่บังคับ)\"\r\n            type=\"datetime-local\"\r\n            fullWidth\r\n            defaultValue=\"2017-05-24T10:30\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={e => setBoxDate(e.target.value)}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"event\"\r\n            label=\"เหตุการณ์\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            onChange={e => setBoxEvent(e.target.value)}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"character\"\r\n            label=\"แท็กตัวละคร\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            onChange={e => setBoxCharacter(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>ยกเลิก</Button>\r\n          <Button onClick={e => addTimelineฺBox(e)}>บันทึก</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </Stack>\r\n    </Box>\r\n    <Button\r\n      variant=\"contained\" \r\n      endIcon={<ClearIcon/>}  \r\n      //color=\"error\"\r\n      onClick={() => {\r\n        setConfirmDialog({\r\n          isOpen: true,\r\n          title: 'ต้องการลบไทม์ไลน์นี้หรือไม่',\r\n          subTitle: '',\r\n          onConfirm: (e) => {deleteTimeline(e)}\r\n        })\r\n      }} \r\n    >\r\n      ลบไทม์ไลน์\r\n    </Button>\r\n    <Box sx={{ pb: 7 }} >\r\n        <CssBaseline />\r\n        <Paper sx={{ position: 'fixed', bottom: 55, left: 0, right: 0 }} elevation={3}>\r\n          <BottomNavigation\r\n            value={value} onChange={handleChange} showLabels={true}\r\n          >\r\n            <BottomNavigationAction label=\"เรียกดูไทม์ไลน์อื่น\" value='/addtimeline' icon={<AddchartIcon/>} />\r\n            \r\n            \r\n            <BottomNavigationAction label=\"เรียกดูแผนผัง\" value='/addmap' icon={<DeviceHubIcon />} />\r\n            <BottomNavigationAction label=\"บันทึก\" value='/saveicon' icon={<SaveIcon />} onClick={(e) => updateTimeline(e)}/>\r\n            \r\n          </BottomNavigation>\r\n        </Paper>\r\n      </Box>\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </div>\r\n  );\r\n  \r\n}\r\n","import React from \"react\";\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from 'react-apollo';\r\nimport TimelineA from \"./TimelineA\";\r\nimport { polyfill } from \"mobile-drag-drop\";\r\nimport { createMuiTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Header from '../../components/Header';\r\nimport BottomNav from '../../components/BottomNav';\r\nrequire(\"dotenv\").config();\r\n\r\npolyfill();\r\nwindow.addEventListener(\"touchmove\", function () {});\r\n\r\nconst client = new ApolloClient({\r\n  uri:process.env.SERVER_URI\r\n});\r\n\r\nconst mdTheme = createMuiTheme({\r\n  palette: {\r\n  primary: {\r\n     main: \"#967969\" // This is an orange looking color\r\n            },\r\n  secondary: {\r\n     main: \"#F2D2BD\" //Another orange-ish color\r\n             }\r\n        },\r\n\r\n});\r\n\r\n\r\n\r\nfunction TimelineDetails(){\r\n\r\n\r\n    return(\r\n        <ApolloProvider client={client}>\r\n        <ThemeProvider theme={mdTheme}>\r\n        <Header/>\r\n        \r\n        <TimelineA/>\r\n\r\n        <BottomNav/>\r\n\r\n        </ThemeProvider>\r\n        \r\n        </ApolloProvider>\r\n    )\r\n};\r\n\r\nexport default  TimelineDetails;","import React from \"react\";\r\nimport {useEffect, useContext, useState} from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from 'react-apollo';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport Divider from '@mui/material/Divider';\r\nimport { createMuiTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ExpandCircleDownIcon from '@mui/icons-material/ExpandCircleDown';\r\nimport MainProjectHeader from '../../components/MainProjectHeader';\r\nimport { useClient } from \"../../client\";\r\nimport { GET_USER_PROJECTS } from \"../../graphql/queries\";\r\nimport { SET_VERSION_MUTATION } from \"../../graphql/mutations\";\r\nimport Context from '../../context';\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nconst mtheme = createMuiTheme({\r\n    palette: {\r\n    primary: {\r\n       main: \"#967969\" // This is an orange looking color\r\n              },\r\n    secondary: {\r\n       main: \"#F2D2BD\" //Another orange-ish color\r\n               }\r\n          },\r\n  \r\n  });\r\n\r\nconst client = new ApolloClient({\r\n  uri: process.env.SERVER_URI\r\n});\r\n\r\n\r\nexport default function VersionMenu(){\r\n\r\n\r\n  const Client = useClient();\r\n  const navigate = useNavigate();\r\n  const {state} = useContext(Context);\r\n  const {currentUser} = state;\r\n  const [currentVersions, setCurrentVersions] = useState([]);\r\n\r\n  const getProjectVersions = async () => {\r\n    const id = currentUser._id;\r\n    const variables = {creator: id, version: true}\r\n    const userProjects = await Client.request(GET_USER_PROJECTS, variables);\r\n    const projectId = localStorage.getItem(\"projectId\");\r\n    console.log(userProjects.Projects)\r\n    const projectVersions = userProjects.Projects.filter(e => e.old_id === projectId && e.version !== 0)\r\n    if(projectVersions){\r\n      console.log(projectVersions)\r\n      setCurrentVersions(projectVersions)\r\n    }else{\r\n      console.log(\"can't find project versions\")\r\n    }\r\n      \r\n  }\r\n\r\n  const setProjectVersion = async(e,Id) => {\r\n    e.preventDefault();\r\n    const projectId = localStorage.getItem(\"projectId\");\r\n    const newId = Id;\r\n    const variables = {projectId, newId};\r\n    const setProjectVersion = await Client.request(SET_VERSION_MUTATION, variables);\r\n    if(setProjectVersion){\r\n      console.log(setProjectVersion)\r\n    }else{\r\n      console.log('set project error')\r\n    }\r\n  }\r\n\r\n  const toMyProject = async(projectId) => {\r\n    navigate('/myproject');\r\n    localStorage.setItem(\"projectId\", projectId);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProjectVersions();\r\n  }, []);\r\n\r\n  return(\r\n    <ApolloProvider client={client}>\r\n        <MainProjectHeader/>\r\n    <ThemeProvider theme={mtheme}>\r\n\r\n      \r\n      <Box\r\n          sx={{\r\n            bgcolor: 'background.paper',\r\n            pt: 8,\r\n            pb: 6,\r\n          }}\r\n        >\r\n          <Container maxWidth=\"sm\">\r\n          <Typography\r\n              variant=\"h3\"\r\n              align=\"center\"\r\n              color=\"text.primary\"\r\n            >\r\n              ประวัติการแก้ไข\r\n            </Typography>\r\n          </Container>\r\n\r\n        </Box>\r\n        <Divider > <ExpandCircleDownIcon/></Divider>\r\n\r\n\r\n        <Box sx={{\r\n            bgcolor: 'background.paper',\r\n            pt: 8,\r\n            pb: 6,\r\n          }}>\r\n        <Grid item xs={12} align=\"center\"> \r\n        <List\r\n          sx={{\r\n            width: '100%',\r\n            maxWidth: 360,\r\n            bgcolor: 'background.paper',\r\n            position: 'relative',\r\n            overflow: 'auto',\r\n            maxHeight: 300,\r\n            '& ul': { padding: 0 },\r\n          }}\r\n          subheader={<li />}\r\n        >\r\n      {currentVersions.map(version => {\r\n        const date = version.last_edited\r\n        const dd = date.slice(8,10);\r\n        const mm_name = date.slice(4,7);\r\n        const time = date.slice(16, 21)\r\n        const mm_lowercase = mm_name.toLowerCase();\r\n        const months = [\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"];\r\n        const mm_number = months.indexOf(mm_lowercase) + 1\r\n        var mm = ''\r\n        if(mm_number < 10){ mm = '0' + mm_number }else{ mm = mm_number }\r\n        const yyyy = date.slice(11,15);\r\n        const last_edit_date = dd + '/' + mm + '/' + yyyy;\r\n        \r\n\r\n        return(\r\n          <li key={version._id}>\r\n            <ListItemButton key={version._id} onClick={() => toMyProject(version._id)}>\r\n              บันทึกเมื่อ : {last_edit_date} เวลา : {time} น.\r\n              \r\n            </ListItemButton>\r\n              <Fab \r\n                variant=\"extended\" \r\n                size=\"small\" \r\n                color=\"primary\" \r\n                aria-label=\"add\"\r\n                onClick={(e) => setProjectVersion(e, version._id)}\r\n              >\r\n                กลับไปใช้เวอร์ชั่นนี้\r\n                <CheckIcon />\r\n              </Fab>\r\n          </li>\r\n        )\r\n      })}\r\n\r\n    </List>\r\n    </Grid>\r\n    </Box>\r\n    </ThemeProvider>\r\n    </ApolloProvider>\r\n    )\r\n};\r\n\r\n","export default function reducer(state, {type, payload}){\r\n    switch(type){\r\n        case \"LOGIN_USER\":\r\n            return{\r\n                ...state,\r\n                currentUser: payload\r\n            };\r\n        case \"IS_LOGGED_IN\":\r\n            return{\r\n                ...state,\r\n                isAuth: payload\r\n            };\r\n        case \"LOGOUT_USER\":\r\n            return{\r\n                ...state,\r\n                isAuth: false,\r\n                currentUser: null\r\n            };\r\n        case \"GET_USER_PROJECTS\":\r\n            return{\r\n                ...state,\r\n                userProjects: payload\r\n            }\r\n        case \"SELECT_PROJECT\":\r\n            return{\r\n                ...state,\r\n                currentProject: payload\r\n            }\r\n        case \"CREATE_PROJECT\":\r\n            const newProject = payload\r\n            const userProjects = state.userProjects\r\n            const prevProjects = Object.values(userProjects).filter(project => project._id !== newProject._id)\r\n            return{\r\n                ...state,\r\n                userProjects: [...prevProjects, newProject]\r\n            }\r\n        default:\r\n            return state; \r\n    }\r\n}","import React, {useContext} from 'react';\r\nimport {Navigate, Outlet} from 'react-router-dom';\r\n\r\nimport Context from './context';\r\n\r\nconst ProtectedRoute = () => {\r\n    const { state } = useContext(Context);\r\n    return state.isAuth ? <Outlet /> : <Navigate to=\"/\" />\r\n}\r\n\r\nexport default ProtectedRoute;","import React, {useContext, useReducer} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter, Routes, Route} from 'react-router-dom';\r\nimport MainProject from './views/Main-Project/Main-Project.js';\r\nimport CreateProject from './views/Main-Project/CreateProject.js';\r\nimport MyProject from './views/MyProject/MyProject';\r\nimport MyCharacter from './views/MyCharacter/MyCharacter';\r\nimport EditCharacter from './views/MyCharacter/EditCharacter.js';\r\nimport CharacterDetails from './views/MyCharacter/CharacterDetails.js';\r\nimport MyMap from './views/MyMap/MyMap';\r\nimport MyStory from './views/MyStory/MyStory'\r\nimport MyTimeline from './views/MyTimeline/MyTimeline';\r\nimport LoginPage from './views/Login-page/Login-page';\r\nimport EditTimeline from './views/MyTimeline/EditTimeline';\r\nimport EditMap from './views/MyMap/EditMap';\r\nimport EditStory from './views/MyStory/EditStory';\r\nimport ChapterDetail from './views/MyStory/ChapterDetail';\r\nimport TimelineDetails from './views/MyTimeline/TimelineDetails';\r\nimport VersionMenu from './views/Main-Project/VersionMenu';\r\nimport Context from './context';\r\nimport reducer from './reducer';\r\nimport ProtectedRoute from './ProtectedRoute';\r\n\r\nconst Root = () => {\r\n  const initialState = useContext(Context);\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  console.log({state})\r\n\r\n  return(\r\n    <BrowserRouter>\r\n      <Context.Provider value={{state, dispatch}}>\r\n        <Routes>\r\n          <Route path=\"/\" element={<LoginPage/>}/>  \r\n          <Route element={<ProtectedRoute/>}>\r\n            <Route path=\"/main-project\" element={<MainProject/>}/>\r\n            <Route path=\"/create-project\" element={<CreateProject/>}/>\r\n            <Route path=\"/myproject\" element={<MyProject/>}/>\r\n            <Route path=\"/mycharacter\" element={<MyCharacter/>}/>\r\n            <Route path=\"/editcharacter\" element={<EditCharacter/>}/>\r\n            <Route path=\"/characterdetails\" element={<CharacterDetails/>}/>\r\n            <Route path=\"/mymap\" element={<MyMap/>}/>\r\n            <Route path=\"/mystory\" element={<MyStory/>}/>\r\n            <Route path=\"/mytimeline\" element={<MyTimeline/>}/>\r\n            <Route path=\"/edittimeline\" element={<EditTimeline/>}/>\r\n            <Route path=\"/timelinedetails\" element={<TimelineDetails/>}/>\r\n            <Route path=\"/editmap\" element={<EditMap/>}/>\r\n            <Route path=\"/editstory\" element={<EditStory/>}/> \r\n            <Route path=\"/chapterdetail\" element={<ChapterDetail/>}/> \r\n            <Route path=\"/versionmenu\" element={<VersionMenu/>}/> \r\n\r\n          </Route>\r\n\r\n            {/* <Route path=\"/main-project\" element={ <MainProject/>}/>\r\n            <Route path=\"/create-project\" element={<CreateProject/>}/>\r\n            <Route path=\"/myproject\" element={<MyProject/>}/>\r\n            <Route path=\"/mycharacter\" element={<MyCharacter/>}/>\r\n            <Route path=\"/editcharacter\" element={<EditCharacter/>}/>\r\n            <Route path=\"/mymap\" element={<MyMap/>}/>\r\n            <Route path=\"/mystory\" element={<MyStory/>}/>\r\n            <Route path=\"/mytimeline\" element={<MyTimeline/>}/> \r\n            <Route path=\"/edittimeline\" element={<EditTimeline/>}/>\r\n            <Route path=\"/editmap\" element={<EditMap/>}/>\r\n            <Route path=\"/editstory\" element={<EditStory/>}/> */}\r\n    \r\n        </Routes>\r\n      </Context.Provider>\r\n    </BrowserRouter>   \r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n    <Root />, document.getElementById('root')\r\n);\r\n\r\n// ReactDOM.render(\r\n//   <BrowserRouter>\r\n//     <App />\r\n//   </BrowserRouter>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}